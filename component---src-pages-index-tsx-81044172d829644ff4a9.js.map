{"version":3,"file":"component---src-pages-index-tsx-81044172d829644ff4a9.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Main/AboutMain/MainText.tsx","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js","webpack://gatsby-starter-default/./static/js/common.js","webpack://gatsby-starter-default/./src/components/Main/AboutMain/Line.ts","webpack://gatsby-starter-default/./src/components/Main/AboutMain/LineGroup.ts","webpack://gatsby-starter-default/./src/components/Main/AboutMain/Square.ts","webpack://gatsby-starter-default/./src/components/Main/AboutMain/SquareGroup.ts","webpack://gatsby-starter-default/./src/components/Main/AboutMain/AboutMainCanvas.ts","webpack://gatsby-starter-default/./src/components/Main/AboutMain/AboutMain.tsx","webpack://gatsby-starter-default/./src/components/Main/AboutInfo/IntroText.tsx","webpack://gatsby-starter-default/./src/components/Main/AboutInfo/Introduction.tsx","webpack://gatsby-starter-default/./src/components/Main/AboutInfo/Identity.tsx","webpack://gatsby-starter-default/./src/components/Main/AboutInfo/AboutInfo.tsx","webpack://gatsby-starter-default/./src/components/Main/AboutCareer/CareerItem.tsx","webpack://gatsby-starter-default/./src/components/Main/AboutCareer/CareerList.tsx","webpack://gatsby-starter-default/./src/components/Main/AboutCareer/ConpanyIconItem.tsx","webpack://gatsby-starter-default/./src/components/Main/AboutCareer/CompanyIconList.tsx","webpack://gatsby-starter-default/./src/components/Main/AboutCareer/AboutCareer.tsx","webpack://gatsby-starter-default/./src/components/Main/AboutMe.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { keyframes } from '@emotion/react';\n\nconst keyframe = keyframes`\n  0%{\n    left: 0;\n    transform: translateX(-100%);\n  }\n  100%{\n    left: 10vw;\n    transform: translateX(0);\n  }\n`;\n\nconst MainTextWrap = styled.div`\n  position: absolute;\n  bottom: 100px;\n  left: 0px;\n  transform: translateX(-100%);\n  animation: ${keyframe} 1s ease forwards;\n  z-index: 2;\n`;\n\nconst MainTextCon = styled.div`\n  font-size: 60px;\n  font-weight: bold;\n  span {\n    color: #82C76D;\n  }\n`;\n\nconst MainText:FunctionComponent = function(){\n  return (\n    <MainTextWrap>\n      <MainTextCon>\n        UX/UI 개발자<br/>\n        <span>이진우</span> 입니다.\n      </MainTextCon>\n    </MainTextWrap>\n  );\n}\n\nexport default MainText;","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}","export function getRandomBoolean() {\n  return Math.random() * 2 >= 1 ? true : false;\n}\n\nexport function getRandomNumberSign() {\n  return Math.random() * 2 >= 1 ? 1 : -1;\n}","import { getRandomBoolean } from '../../../../static/js/common';\n\nclass Line{\n  public width: number;\n  public height: number;\n  public x: number;\n  public y: number;\n  public dx: number;\n  public dy: number;\n  private color: string;\n  private value: string;\n  private speed: number;\n\n  constructor(value: string, stageWidth: number, stageHeight: number){\n    this.width = 5;\n    this.height = 5;\n    this.x = 0;\n    this.y = 0;\n    this.dx = 0;\n    this.dy = 0;\n    this.color = '#f2f2f2';\n    this.value = value;\n    this.speed = Math.floor(Math.random() * 3) + 1;\n    \n    // true : x moving, false : y moving\n    if(getRandomBoolean()) {\n      const isRight = getRandomBoolean();\n      this.x = isRight ? -this.width : stageWidth;\n      this.y = Math.floor(Math.random() * (stageHeight - this.height)) + this.height;\n      this.dx = isRight ? this.speed : -this.speed;\n    } else {\n      const isBottom = getRandomBoolean();\n      this.x = Math.floor(Math.random() * (stageWidth - this.width)) + this.width;\n      this.y = isBottom ? -this.height : stageHeight;\n      this.dy = isBottom ? this.speed : -this.speed;\n    }\n  }\n\n  move(){\n    this.x += this.dx;\n    this.y += this.dy;\n  }\n\n  // checkScreen(stageWidth: number, stageHeight: number){\n  //   const minX = this.x;\n  //   const maxX = this.x + this.width;\n  //   const minY = this.y;\n  //   const maxY = this.y + this.height;\n  //   if(maxX < 0 || minX > stageWidth || maxY < 0 || minY > stageHeight) {\n  //   }\n  // }\n\n  draw(ctx: CanvasRenderingContext2D){\n    this.move();\n    ctx.save();\n    ctx.fillStyle = this.color;\n    ctx.fillRect(this.x, this.y, this.width, this.height);\n    ctx.restore();\n  }\n}\n\nexport default Line;","import Line from \"./Line\";\n\nclass lineGroup{\n  public lineList: Array<Line>;\n  private stageWidth: number;\n  private stageHeight: number;\n  private maxLength: number;\n\n  constructor(stageWidth: number, stageHeight: number){\n    this.lineList = [];\n    this.stageWidth = stageWidth;\n    this.stageHeight = stageHeight;\n    this.maxLength = 50;\n    \n    setInterval(this.createLineInterval.bind(this), 50);\n  }\n\n  createLineInterval() {\n    if(this.lineList.length < this.maxLength){\n      this.create();\n    }\n  }\n\n  create(){\n    this.lineList.push(new Line('', this.stageWidth, this.stageHeight));\n    // this.lineList.sort((a, b) => a.x - b.x || a.y - b.y);\n  }\n\n  draw(ctx : CanvasRenderingContext2D){\n    for(let line of this.lineList){\n      // line.checkScreen(this.stageWidth, this.stageHeight);\n      line.draw(ctx);\n    }\n  }\n}\n\nexport default lineGroup;","\ntype SquarePositionProps = {\n  minX: number,\n  maxX: number,\n  minY: number,\n  maxY: number,\n};\n\nclass Square{\n  private width: number;\n  private height: number;\n  private x: number;\n  private y: number;\n  private color: string;\n  private alpha: number;\n\n  COLOR = ['#243763', '#FF6E31', '#FFEBB7', '#AD8E70'];\n  \n  constructor(pos: SquarePositionProps) {\n    this.width = pos.maxX - pos.minX;\n    this.height = pos.maxY - pos.minY;\n    this.x = pos.minX;\n    this.y = pos.minY;\n    this.color = this.COLOR[Math.floor(Math.random() * 3)];\n    this.alpha = 0;\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    this.alpha += 0.001;\n\n    ctx.save();\n    ctx.fillStyle = this.color;\n    ctx.globalAlpha = this.alpha;\n    ctx.fillRect(this.x, this.y, this.width, this.height);\n    ctx.restore();\n  }\n}\n\nexport default Square;","import Square from './Square';\n\ntype SquarePositionProps = {\n  minX: number,\n  maxX: number,\n  minY: number,\n  maxY: number,\n};\n\nclass SquareGroup {\n  private squareList: Array<Square>;\n  constructor() {\n    this.squareList = [];\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    for(let square of this.squareList) {\n      square.draw(ctx);\n    }\n  }\n\n  create(pos: SquarePositionProps) {\n    this.squareList.push(new Square(pos));\n  }\n}\n\nexport default SquareGroup;","import { LineStyle } from 'pixi.js';\nimport LineGroup from './LineGroup';\nimport SquareGroup from './SquareGroup';\n\nclass AboutMainCanvas{\n  private canvas: HTMLCanvasElement;\n  private ctx: CanvasRenderingContext2D | null;\n  private lineGroup: LineGroup;\n  private squareGroup: SquareGroup;\n  private parentNode: HTMLDivElement;\n  private stageWidth: number;\n  private stageHeight: number;\n\n  constructor(parentNode: HTMLDivElement){\n    this.canvas = document.createElement('canvas');\n    this.ctx = this.canvas.getContext('2d');\n    this.stageWidth = 0;\n    this.stageHeight = 0;\n    this.canvas.style.position = 'absolute';\n    this.canvas.style.top = '0';\n    this.canvas.style.left = '0';\n    \n    this.parentNode = parentNode;\n    if(this.parentNode){\n      this.parentNode.appendChild(this.canvas);\n      this.resize();\n    }\n    \n    this.lineGroup = new LineGroup(this.stageWidth, this.stageHeight);\n    this.squareGroup = new SquareGroup();\n    window.requestAnimationFrame(this.draw.bind(this));\n\n    this.canvas.addEventListener('click', e => this.clickHandler.call(this, e));\n  }\n  resize(){\n    this.stageWidth = this.parentNode.clientWidth;\n    this.stageHeight = this.parentNode.clientHeight;\n\n    this.canvas.width = this.stageWidth;\n    this.canvas.height = this.stageHeight;\n  }\n\n  draw(){\n    window.requestAnimationFrame(this.draw.bind(this));\n    if(this.ctx){\n      this.lineGroup.draw(this.ctx);\n      this.squareGroup.draw(this.ctx);\n    }\n  }\n\n  clickHandler(e: MouseEvent){\n    const pos = this.checkLineArea(e.x, e.y);\n    this.squareGroup.create(pos);\n  }\n\n  checkLineArea(x: number, y: number) {\n    let minX = 0;\n    let maxX = this.stageWidth;\n    let minY = 0;\n    let maxY = this.stageHeight;\n    // lineGroup이 x, y가 정렬되있지 않아 min, max가 정확히 매칭되지 않음 - 선이 많아 오히려 괜찮을지도?\n    for(let line of this.lineGroup.lineList){\n      if(line.dx > 0) { // x moving\n        if(line.y < y){\n          minY = (minY - line.y) < 0 ? line.y + line.height : minY;\n        } else {\n          maxY = (maxY - line.y) > 0 ? line.y : maxY;\n        }\n      }\n      if(line.dy > 0) { // y moving\n        if(line.x < x){\n          minX = (minX - line.x) < 0 ? line.x + line.width : minX;\n        } else {\n          maxX = (maxX - line.x) > 0 ? line.x : maxX;\n        }\n      }\n    }\n    // console.log(minX, minY, maxX, maxY);\n    return {minX, minY, maxX, maxY};\n  }\n}\n\nexport default AboutMainCanvas;","import React, { FunctionComponent, useEffect, useRef } from 'react';\nimport styled from '@emotion/styled';\nimport MainText from './MainText';\nimport AboutMainCanvas from './AboutMainCanvas';\n\nconst AboutMainWrap = styled.section`\n  position: relative;\n  height: 100vh;\n`;\n\nconst AboutMain:FunctionComponent = function(){\n  const aboutMainWrap = useRef<HTMLDivElement>(null);\n  let aboutMainCanvas;\n\n  useEffect(function(){\n    if(aboutMainWrap.current){\n      aboutMainCanvas = new AboutMainCanvas(aboutMainWrap.current);\n    }\n  }, [])\n\n  return (\n    <AboutMainWrap ref={aboutMainWrap}>\n      <MainText/>\n    </AboutMainWrap>\n  );\n}\n\nexport default AboutMain;","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\n\ntype IntroTextProps = {\n  title: string,\n  content: string | Array<string>,\n}\n\nconst IntroTextWrap = styled.div`\n\n`;\n\nconst IntroTitle = styled.div`\n  font-size: 30px;\n  font-weight: bold;\n  margin-bottom: 24px;\n`\nconst IntroTextCon = styled.div`\n  font-size: 16px;\n  line-height: 42px;\n`\n\nconst IntroTextArrayCon = styled.ul`\n  display: flex;\n  flex-flow: column nowrap;\n  gap: 21px;\n`;\n\nconst IntroTextArrayItem = styled.li`\n  font-size: 14px;\n`;\n\nconst IntroText: FunctionComponent<IntroTextProps> = function({ title, content }) {\n  const isString = typeof content == 'string';\n\n  return (\n    <IntroTextWrap>\n      <IntroTitle>\n        {title}\n      </IntroTitle>\n      {\n        isString\n        ? <IntroTextCon>\n          <pre>\n            {content}\n          </pre>\n        </IntroTextCon>\n        : <IntroTextArrayCon>\n          {\n            content.map( (data, index) => <IntroTextArrayItem key={data}>\n              {data}\n            </IntroTextArrayItem>\n            )\n          }\n        </IntroTextArrayCon>\n      }\n    </IntroTextWrap>\n  );\n}\n\nexport default IntroText;","import React, { FunctionComponent } from \"react\";\nimport styled from \"@emotion/styled\";\nimport IntroText from \"./IntroText\";\n\nconst IntroductionWrap = styled.article`\n  grid-row: 1 / 3;\n`;\n\nconst title = `Introduction`;\nconst content =\n`Vanilla JavaScript를 좋아하는 UX/UI 개발자 입니다.\n웹디자인 과정을 수료하며 본격적으로 프로그래밍을 접했고 현재 퍼블리셔로 커리어를 쌓고있습니다.\nJavaScript로 인터렉션이 많은 웹 페이지를 만드는 것을 좋아합니다.\n그리고 그저 JavaScript를 사랑합니다.\n\n\n\n\n\nJavaScript . . .\nJavaScript . .\nJavaScript .\n`;\n\nconst Introduction:FunctionComponent = function() {\n  return (\n    <IntroductionWrap>\n      <IntroText title={title} content={content} />\n    </IntroductionWrap>\n  )\n}\n\nexport default Introduction;","import React, { FunctionComponent } from \"react\";\nimport styled from \"@emotion/styled\";\nimport IntroText from \"./IntroText\";\n\nconst IdentityWrap = styled.article`\n`;\n\nconst title = 'Identity';\nconst content = [\n  `MiracleMorning : 아침시간을 활용해 좋은 습관을 이어가고 있습니다.`,\n  `TimeBlocking : 시간을 쪼개서 쓰는걸 다들 이렇게 부르더라고요.`,\n  `Classical : 근본적인, 원초적인 요소들을 좋아합니다.`\n]\n\nconst Identity:FunctionComponent = function() {\n  return (\n    <IdentityWrap>\n      <IntroText title={title} content={content} />\n    </IdentityWrap>\n  )\n}\n\nexport default Identity;","import React, { FunctionComponent, useEffect, useRef } from 'react';\nimport styled from '@emotion/styled';\nimport Introduction from './Introduction';\nimport Identity from './Identity';\n\nconst AboutInfoWrap = styled.section`\n  display: block;\n  margin: 40vh 0;\n`;\n\nconst AboutInfoInnerWrap = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  gap: 60vh;\n`;\n\nconst AboutInfo:FunctionComponent = function(){\n  const aboutInfoWrap = useRef<HTMLDivElement>(null);\n\n  return (\n    <AboutInfoWrap ref={aboutInfoWrap}>\n      <AboutInfoInnerWrap>\n        <Introduction />\n        <Identity />\n      </AboutInfoInnerWrap>\n    </AboutInfoWrap>\n  );\n}\n\nexport default AboutInfo;","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\n\ntype CareerItemProps = {\n  title: String,\n  content: String,\n  startDate: String,\n  endDate: String\n}\n\nconst CareerItemWrap = styled.div`\n  position: relative;\n  width: 100%;\n`;\nconst CareerInfoWrap = styled.div`\n  position: relative;\n  display: inline-flex;\n  flex-flow: column nowrap;\n  &:after {\n    position: absolute;\n    top: 50%;\n    left: calc(100% + 1vw);\n    width: 0;\n    height: 2px;\n    background-color: #000;\n    transform: translate(0, -50%);\n    transition-duration: 1s;\n    content: '';\n  }\n  &:hover {\n    &:after {\n      width: calc(100vw - 20vw - 40vw - 100% - 40px);\n    }\n  }\n`;\nconst TitleWrap = styled.div`\n  width: fit-content;\n  line-height: 30px;\n`;\nconst PeriodWrap = styled.div`\n  width: fit-content;\n  height: 22px;\n  line-height: 22px;\n`;\nconst ContentWrap = styled.div`\n  position: relative;\n  float: right;\n  width: 40vw;\n  line-height: 30px;\n  color: #eee;\n  font-size: 14px;\n  transition-duration: 1s;\n`;\n\n\nconst CareerItem : FunctionComponent<CareerItemProps> = function({title, content, startDate, endDate}) {\n  return (\n    <CareerItemWrap>\n      <CareerInfoWrap>\n        <TitleWrap>\n          <h3><pre>{title}</pre></h3>\n        </TitleWrap>\n        <PeriodWrap>\n          {startDate} ~ {endDate}\n      </PeriodWrap>\n      </CareerInfoWrap>\n      <ContentWrap>\n        <p>\n          {content}\n        </p>\n      </ContentWrap>\n    </CareerItemWrap>\n  );\n}\n\nexport default CareerItem;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport CareerItem from './CareerItem';\n\nconst CareerListWrap = styled.div`\n  position: relative;\n  display: flex;\n  flex-flow: column nowrap;\n  gap: 50px;\n  margin-top: 84px;\n`;\n\nconst ItemsList = [\n  {\n    title: `Produce Display Initial Cleaner`,\n    content: `\n      중국업체에서 의뢰한 디스플레이 설비 제작 프로젝트에 참여했습니다.\n      디스플레이 제작의 처음 단계에서 패널의 이물질을 제거하기 위한 설비인 Initial Cleaner의 설비를 검사를 담당했습니다.\n      협력업체 담당 직원분과 함께 설비의 요소들이 허용치 안에 있는지 검사하는 과정을 거쳤습니다.\n      제작되어있는 본사의 메뉴얼을 바탕으로 검사를 진행했으며 허용치 이상의 오차가 발생하면 보고 후 조치할 수 있도록 했습니다.\n    `,\n    startDate: `2017.11`,\n    endDate: `2018.04`,\n  },\n  {\n    title: `Film Company\\nManufacturing Execution System`,\n    content: `\n      필름생산업체에서 의뢰한 생산관리시스템 제작 프로젝트에 참여했습니다.\n      생산된 제품의 데이터를 현장에서 등록하고, 사무실에서도 데이터를 연동에 확인할 수 있는 생산관리시스템의 동작 구현을 담당했습니다.\n      디자인된 화면이 내려오면 그 화면의 기능이 올바르게 동작할 수 있도록 제작하고 테스트를 진행했습니다.\n      공정에 따라 데이터 등록/조회/수정/삭제가 가능하도록 제작했습니다.\n      MSSQL로 Query를 작성해 DataBase에 요청하고 반환 데이터를 화면에 바인딩시켰습니다.\n      회사정보, 인사정보, 입고등록, 출고등록, 현황등의 동작을 구현했습니다.\n\n      제작된 생산관리시스템 테스트를 진행했습니다. 공정 순서대로 다양한 테스트 케이스로 실행해 오류를 수정하고 완성도를 높였습니다.\n\n      현장에서 사용하는 PDA 프로그램의 코드를 분석하고 요구사항이 있다면 수정해 적용했습니다.\n\n      DevExpress라이브러리의 리포트기능을 활용해 생산품의 결점내용을 그래프로 출력할 수 있는 리포트를 제작했습니다.\n\n      화면설계서, 프로그램설계서, DB설계서 등 스마트팩토리 사업에 필요한 문서작업을 진행했습니다. 오피스 프로그램을 사용해 요구되는 조건에 맞춰 문서를 작성했습니다.\n\n      사용자 분들이 기능을 쉽게 이해할 수 있도록 메뉴얼을 작성했습니다. 메뉴얼은 화면별로 작성했으며, 화면의 정보와 각각 요소의 기능을 알기쉽도록 기술했습니다.\n    `,\n    startDate: `2021.06`,\n    endDate: `2021.10`,\n  },\n  {\n    title: `Electron Beam Company\\nManufacturing Execution System`,\n    content: `\n      전자선조사업체에서 의뢰한 생산관리시스템 제작 프로젝트에 참여했습니다.\n      생산된 제품의 데이터를 현장에서 등록하고, 사무실에서도 데이터를 연동에 확인할 수 있는 생산관리시스템의 동작 구현을 담당했습니다.\n      디자인된 화면이 내려오면 그 화면의 기능이 올바르게 동작할 수 있도록 제작하고 테스트를 진행했습니다.\n      공정에 따라 데이터 등록/조회/수정/삭제가 가능하도록 제작했습니다.\n      MSSQL로 Query를 작성해 DataBase에 요청하고 반환 데이터를 화면에 바인딩시켰습니다.\n      회사정보, 인사정보, 조사등록, 현황등의 동작을 구현했습니다.\n\n      제작된 생산관리시스템 테스트를 진행했습니다. 공정 순서대로 다양한 테스트 케이스로 실행해 오류를 수정하고 완성도를 높였습니다.\n    `,\n    startDate: `2021.08`,\n    endDate: `2021.10`,\n  },\n  {\n    title: `Posco\\nSafety&Health System`,\n    content: `\n      Posco의 안전보건시스템 제작 프로젝트에 참여중입니다.\n    `,\n    startDate: `2022.07`,\n    endDate: `in progress`,\n  },\n  {\n    title: `PoscoE&C\\nHumanResource System`,\n    content: `\n      PoscoE&C(포스코건설)의 안전보건시스템 제작 프로젝트에 참여중입니다.\n    `,\n    startDate: `2023.01`,\n    endDate: `in progress`,\n  },\n]\n\nconst CareerList : FunctionComponent = function() {\n  return (\n    <CareerListWrap>\n      {\n        ItemsList.map((item, index) => (\n          <CareerItem\n            key={`${item.title}_${index}`} \n            title={item.title} \n            content={item.content} \n            startDate={item.startDate} \n            endDate={item.endDate} />\n        ))\n      }\n    </CareerListWrap>\n  );\n};\n\nexport default CareerList;","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\n\ntype CompanyIconItemProps = {\n  name: string,\n  startDate: string,\n  endDate: string,\n  icon: string,\n}\n\nconst CompanyIconItemtWrap = styled.div`\n  position: relative;\n  display: inline-block;\n`;\n\nconst CompanyTooltipCon = styled.div`\n  position: absolute;\n  top: 100%;\n  right: 0%;\n  padding: 12px;\n  background-color: #666;\n  border-radius: 5px;\n  opacity: 0;\n  transition-duration: 1s;\n\n  &:after {\n    position: absolute;\n    top: 0;\n    right: 12px;\n    width: 0;\n    height: 0;\n    border-bottom: 7px solid #666;\n    border-top: 5px solid transparent;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    transform: translateX(-50%) translateY(-100%);\n    content: '';\n  }\n`;\nconst CompanyIconCon = styled.div`\n  padding: 8px;\n  &:hover + ${CompanyTooltipCon} {\n    opacity: 1;\n  }\n`;\nconst TooltipTitle = styled.div`\n  color: #fff;\n  font-size: 12px;\n  word-break: keep-all;\n  white-space: pre;\n`;\nconst TooltipPeriod = styled.div`\n  margin-top: 4px;\n  color: #fff;\n  font-size: 10px;\n  word-break: keep-all;\n  white-space: pre;\n`;\n\nconst CompanyIconItem: FunctionComponent<CompanyIconItemProps> = function({\n  name, startDate, endDate, icon\n}) {\n  return (\n    <CompanyIconItemtWrap>\n      <CompanyIconCon>\n        <img src={`../../../../image/${icon}`} alt={`${icon} image`} width={24} height={24} />\n      </CompanyIconCon>\n      <CompanyTooltipCon>\n        <TooltipTitle>\n          {name}\n        </TooltipTitle>\n        <TooltipPeriod>\n          {startDate} ~ {endDate}\n        </TooltipPeriod>\n      </CompanyTooltipCon>\n    </CompanyIconItemtWrap>\n  );\n}\n\nexport default CompanyIconItem;","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport CompanyIconItem from './ConpanyIconItem';\n\nconst COMPANY_LIST = [\n  {\n    name: `부산기계공업고등학교`,\n    startDate: `2014.03`,\n    endDate: `2017.02`,\n    icon: `icon_school.svg`,\n  },\n  {\n    name: `(주)SEMES`,\n    startDate: `2017.11`,\n    endDate: `2018.04`,\n    icon: `icon_semes.svg`,\n  },\n  {\n    name: `미래정보기술(주)`,\n    startDate: `2021.04`,\n    endDate: `2021.11`,\n    icon: `icon_mirae.svg`,\n  },\n  {\n    name: `(주)레이랩`,\n    startDate: `2022.07`,\n    endDate: ``,\n    icon: `icon_raylab.svg`,\n  },\n];\nconst CompanyIconListWrap = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  gap: 0px;\n`;\nconst CompanyIconTitle = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0 12px;\n  font-size: 14px;\n`;\n\nconst CompanyIconList: FunctionComponent = function() {\n  return (\n    <CompanyIconListWrap>\n      <CompanyIconTitle>\n        <h4>history</h4>\n      </CompanyIconTitle>\n      {\n        COMPANY_LIST.map((company, index) => \n          <CompanyIconItem\n            key={`${company.name}_${index}`}\n            name={company.name}\n            startDate={company.startDate}\n            endDate={company.endDate}\n            icon={company.icon} />\n        )\n      }\n    </CompanyIconListWrap>\n  );\n}\n\nexport default CompanyIconList;","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport CareerList from './CareerList';\nimport CompanyIconList from './CompanyIconList';\n\n\nconst AboutCareerWrap = styled.section`\n`;\n\nconst CareerTitleCon = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between;\n`\nconst CareerTitle = styled.div`\n  font-size: 30px;\n  font-weight: bold;\n`;\n\n\n\nconst AboutCareer : FunctionComponent = function () {\n  return (\n    <AboutCareerWrap>\n      <CareerTitleCon>\n        <CareerTitle>\n          <h3>Career</h3>\n        </CareerTitle>\n        <CompanyIconList/>\n      </CareerTitleCon>\n      <CareerList/>\n    </AboutCareerWrap>\n  );\n}\n\nexport default AboutCareer;","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport AboutMain from './AboutMain/AboutMain';\nimport AboutInfo from './AboutInfo/AboutInfo';\nimport AboutCareer from './AboutCareer/AboutCareer';\n\nconst AboutMeWrap = styled.div`\n  width: 100%;\n  // height: 100vh;\n  background-color: #fff;\n  section {\n    width: 100%;\n    padding: 50px 10vw;\n    &[class*='AboutMain'] {\n      padding: 0 0;\n    }\n  }\n`;\n\nconst AboutMe : FunctionComponent = function(){\n  return (\n    <AboutMeWrap>\n      <AboutMain/>\n      <AboutInfo/>\n      <AboutCareer/>\n    </AboutMeWrap>\n  );\n}\n\nexport default AboutMe;","import React, { FunctionComponent, useState, useEffect, useRef } from 'react';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\nimport { graphql } from 'gatsby';\nimport Template from 'components/Common/Template';\nimport AboutMe from 'components/Main/AboutMe';\n\ntype indexPageProps = {\n  location: {\n    search: string\n  },\n  data: {\n    site: {\n      siteMetadata: {\n        title: string,\n        description: string,\n        siteUrl: string\n      }\n    },\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData,\n      }\n      publicURL: string\n    }\n  },\n}\n\nconst IndexPage: FunctionComponent<indexPageProps> = function({\n  location: { search },\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl }\n    },\n    file: {\n      childImageSharp: { gatsbyImageData },\n      publicURL,\n    }\n  },\n}){\n\n  return (\n    <Template\n      title={title}\n      description={description}\n      url={siteUrl}\n      image={publicURL}>\n      <AboutMe/>\n    </Template>\n  )\n}\n\nexport default IndexPage;\n\nexport const getPostList = graphql`\n  query getPostList {\n    site{\n      siteMetadata{\n        title,\n        description,\n        siteUrl\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      },\n      publicURL\n    }\n  }\n`"],"names":["strings","raw","keyframe","keyframes","slice","MainTextWrap","target","MainTextCon","name","styles","___EmotionJSX","getRandomBoolean","Math","random","Line","value","stageWidth","stageHeight","this","width","height","x","y","dx","dy","color","speed","floor","isRight","isBottom","move","draw","ctx","save","fillStyle","fillRect","restore","lineGroup","lineList","maxLength","setInterval","createLineInterval","bind","length","create","push","Square","pos","COLOR","maxX","minX","maxY","minY","alpha","globalAlpha","SquareGroup","squareList","AboutMainCanvas","parentNode","canvas","document","createElement","getContext","style","position","top","left","appendChild","resize","LineGroup","squareGroup","window","requestAnimationFrame","addEventListener","e","_this","clickHandler","call","clientWidth","clientHeight","checkLineArea","line","AboutMainWrap","aboutMainWrap","useRef","useEffect","current","ref","MainText","IntroTextWrap","IntroTitle","IntroTextCon","IntroTextArrayCon","IntroTextArrayItem","title","content","isString","map","data","index","key","IntroductionWrap","IntroText","IdentityWrap","AboutInfoWrap","AboutInfoInnerWrap","aboutInfoWrap","Introduction","Identity","CareerItemWrap","CareerInfoWrap","TitleWrap","PeriodWrap","ContentWrap","startDate","endDate","CareerListWrap","ItemsList","item","CareerItem","CompanyIconItemtWrap","CompanyTooltipCon","CompanyIconCon","TooltipTitle","TooltipPeriod","icon","src","alt","COMPANY_LIST","CompanyIconListWrap","CompanyIconTitle","company","CompanyIconItem","AboutCareerWrap","CareerTitleCon","CareerTitle","CompanyIconList","CareerList","AboutMeWrap","AboutMain","AboutInfo","AboutCareer","location","search","site","siteMetadata","description","siteUrl","file","publicURL","childImageSharp","gatsbyImageData","Template","url","image","AboutMe"],"sourceRoot":""}
{"version":3,"file":"71df6d2dea6d970c7aed4553aaa5fc528795ea9f-94d5172c78931072cfda.js","mappings":"6JAOA,IAAMA,GAAgB,cAAAC,OAAAA,YAAA,EAAAC,KAAAA,SAAAC,OAAAA,u6BAgItB,IAJyD,YAAoB,IAARC,EAAQ,EAARA,KACnE,OAAOC,EAAAA,EAAAA,IAACL,EAAD,CAAkBM,wBAAyB,CAAEC,OAAQH,IAD9D,C,yFC3HA,IAAMI,GAAwB,cAAAP,OAAAA,aAAA,EAAAC,KAAAA,UAAAC,OAAAA,+FAOxBM,GAAwB,cAAAR,OAAAA,aAAA,EAAAC,KAAAA,SAAAC,OAAAA,mKAcxBO,GAAK,cAAAT,OAAAA,aAAA,EAAAC,KAAAA,UAAAC,OAAAA,kQAiBLQ,GAAQ,cAAAV,OAAAA,aAAA,EAAAC,KAAAA,SAAAC,OAAAA,oOAgBRS,GAAI,cAAAX,OAAAA,aAAA,EAAAC,KAAAA,UAAAC,OAAAA,8CA6BV,EAvB2E,YAWzE,QAVAU,KACEC,EASF,EATEA,MAAOC,EAST,EATSA,KAAMC,EASf,EATeA,KASf,EATqBC,QAUrB,OAAOZ,EAAAA,EAAAA,IAACG,EAAD,MACLH,EAAAA,EAAAA,IAACI,EAAD,MACEJ,EAAAA,EAAAA,IAACK,EAAD,KAAQI,IACRT,EAAAA,EAAAA,IAACM,EAAD,MACEN,EAAAA,EAAAA,IAAAA,MAAAA,KAAMU,IACNV,EAAAA,EAAAA,IAACO,EAAD,KAAOI,EAAKE,KAAK,UAjBzB,E,UC7DA,IAAMC,GAAe,cAAAlB,OAAAA,YAAA,EAAAC,KAAAA,SAAAC,OAAAA,uGASfiB,GAAkBC,EAAAA,EAAAA,GAAOC,EAAAA,GAAP,CAAArB,OAAAA,YAAAoB,CAAHE,CAAArB,KAAAA,UAAAC,OAAAA,2EAiBrB,EARyD,YAEvD,IADAqB,EACA,EADAA,KAEA,OAAOnB,EAAAA,EAAAA,IAACc,EAAD,MACHd,EAAAA,EAAAA,IAACe,EAAD,CAAiBK,GAAID,GAArB,WAJN,ECPA,IAAME,GAAkB,cAAAzB,OAAAA,aAAA,EAAAC,KAAAA,SAAAC,OAAAA,kBAmBxB,EAd+D,YAM7D,QALAwB,KACMvB,GAIN,EAJEwB,GAIF,EAJMxB,MACMoB,EAGZ,EAHEK,OAAUL,KACVM,EAEF,EAFEA,YAGF,OAAOzB,EAAAA,EAAAA,IAACqB,EAAD,MACLrB,EAAAA,EAAAA,IAAC0B,EAAD,CAAsBlB,KAAMiB,KAC5BzB,EAAAA,EAAAA,IAAC2B,EAAAA,EAAD,CAAa5B,KAAMA,KACnBC,EAAAA,EAAAA,IAAC4B,EAAD,CAAaT,KAAMA,IAVvB,C","sources":["webpack://gatsby-starter-default/./src/components/Post/Common/PostContent.tsx","webpack://gatsby-starter-default/./src/components/Post/Continuous/ContinuousPostHeader.tsx","webpack://gatsby-starter-default/./src/components/Post/Continuous/CommentLink.tsx","webpack://gatsby-starter-default/./src/components/Post/Continuous/ContinuousPost.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\n\ninterface PostContentProps {\n  html: string\n}\n\nconst MarkdownRenderer = styled.div`\n  // Renderer Style\n  display: flex;\n  flex-direction: column;\n  width: 768px;\n  margin: 0 auto;\n  padding: 100px 0;\n  word-break: break-all;\n\n  // Markdown Style\n  line-height: 1.8;\n  font-size: 16px;\n  font-weight: 400;\n\n  // Apply Padding Attribute to All Elements\n  p {\n    padding: 3px 0;\n  }\n\n  // Adjust Heading Element Style\n  h1,\n  h2,\n  h3 {\n    font-weight: 800;\n    margin-bottom: 30px;\n  }\n\n  * + h1,\n  * + h2,\n  * + h3 {\n    margin-top: 80px;\n  }\n\n  hr + h1,\n  hr + h2,\n  hr + h3 {\n    margin-top: 0;\n  }\n\n  h1 {\n    font-size: 30px;\n  }\n\n  h2 {\n    font-size: 25px;\n  }\n\n  h3 {\n    font-size: 20px;\n  }\n\n  // Adjust Quotation Element Style\n  blockquote {\n    margin: 30px 0;\n    padding: 5px 15px;\n    border-left: 2px solid #000000;\n    font-weight: 800;\n  }\n\n  // Adjust List Element Style\n  ol,\n  ul {\n    margin-left: 20px;\n    padding: 30px 0;\n  }\n\n  // Adjust Horizontal Rule style\n  hr {\n    border: 1px solid #000000;\n    margin: 100px 0;\n  }\n\n  // Adjust Link Element Style\n  a {\n    color: #4263eb;\n    text-decoration: underline;\n  }\n\n  // Adjust Code Style\n  pre[class*='language-'] {\n    margin: 30px 0;\n    padding: 15px;\n    font-size: 15px;\n\n    ::-webkit-scrollbar-thumb {\n      background: rgba(255, 255, 255, 0.5);\n      border-radius: 3px;\n    }\n  }\n\n  code[class*='language-'],\n  pre[class*='language-'] {\n    tab-size: 2;\n  }\n\n  // Markdown Responsive Design\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 40px 20px;\n    line-height: 1.6;\n    font-size: 14px;\n\n    h1 {\n      font-size: 23px;\n    }\n\n    h2 {\n      font-size: 20px;\n    }\n\n    h3 {\n      font-size: 17px;\n    }\n\n    img {\n      width: 100%;\n    }\n\n    hr {\n      margin: 50px 0;\n    }\n  }\n`;\n\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html }) {\n  return <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />\n}\n\nexport default PostContent;","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { PostFrontmatterType } from 'types/PostItem.types';\n\ntype ContinuousPostHeaderProps = {\n  data: PostFrontmatterType\n}\n\nconst ContinuousPostHeaderWrap = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: flex-end;\n  width: 100%;\n  background-color: #fafafa;\n`;\nconst ContinuousPostHeaderInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 768px;\n  height: 100%;\n  margin: 0 auto;\n  padding: 60px 0;\n  color: #ffffff;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 40px 20px;\n  }\n`;\nconst Title = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  overflow-wrap: break-word;\n  margin-top: auto\n  text-overflow: ellipsis;\n  white-space: normal;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  color: #333;\n  font-size: 45px;\n  font-weight: bold;\n\n  @media (max-width: 768px) {\n    font-size: 30px;\n  }\n`;\nconst PostData = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 48px;\n  color: #999;\n  font-size: 16px;\n  font-weight: 700;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    font-size: 15px;\n    font-weight: 400;\n  }\n`;\nconst Tags = styled.div`\n  margin-top: 16px;\n  color: #ccc;\n  font-size: 14px;\n`;\n\nconst ContinuousPostHeader: FunctionComponent<ContinuousPostHeaderProps> = function({\n  data: {\n    title, date, tags, summary,\n    // 이미지 처리시 사용\n    // thumbnail: {\n    //   childImageSharp: {\n    //     gatsbyImageData\n    //   },\n    //   publicURL\n    // }\n  }\n}){\n  return <ContinuousPostHeaderWrap>\n    <ContinuousPostHeaderInfo>\n      <Title>{title}</Title>\n      <PostData>\n        <div>{date}</div>\n        <Tags>{tags.join(' / ')}</Tags>\n      </PostData>\n    </ContinuousPostHeaderInfo>\n  </ContinuousPostHeaderWrap>\n}\n\nexport default ContinuousPostHeader;","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from 'gatsby';\n\ntype CommentLinkProps = {\n  slug: string\n}\nconst CommentLinkWrap = styled.div`\n  display: block;\n  width: 768px;\n  margin: 20px auto;\n  text-align: right;\n  @media (max-width: 768px){\n    width: 100%;\n  }\n`;\nconst CommentLinkItem = styled(Link)`\n  font-size: 18px;\n  margin-right: 20px;\n  color: #a0a0a0;\n  transition-duration: .3s;\n`;\n\n\n\nconst CommentLink: FunctionComponent<CommentLinkProps> = function({\n  slug\n}){\n  return <CommentLinkWrap>\n      <CommentLinkItem to={slug}>Comment</CommentLinkItem>\n    </CommentLinkWrap>\n}\n\nexport default CommentLink;","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport PostContent from 'components/Post/Common/PostContent';\nimport ContinuousPostHeader from 'components/Post/Continuous/ContinuousPostHeader';\nimport CommentLink from 'components/Post/Continuous/CommentLink'\nimport { PostFrontmatterType } from 'types/PostItem.types';\n\ntype ContinuousPostProps = {\n  node: {\n    id: string,\n    html: string,\n    fields: {\n      slug: string\n    }\n    frontmatter: PostFrontmatterType\n  }\n}\n\nconst ContinuousPostWrap = styled.div`\n  margin: 80px 0;\n`;\n\n\nconst ContinuousPost: FunctionComponent<ContinuousPostProps> = function({\n  node: {\n    id, html,\n    fields: { slug },\n    frontmatter\n  }\n}){\n  return <ContinuousPostWrap>\n    <ContinuousPostHeader data={frontmatter}/>\n    <PostContent html={html}/>\n    <CommentLink slug={slug}/>\n  </ContinuousPostWrap>\n}\n\nexport default ContinuousPost;"],"names":["MarkdownRenderer","target","name","styles","html","___EmotionJSX","dangerouslySetInnerHTML","__html","ContinuousPostHeaderWrap","ContinuousPostHeaderInfo","Title","PostData","Tags","data","title","date","tags","summary","join","CommentLinkWrap","CommentLinkItem","_styled","Link","process","slug","to","ContinuousPostWrap","node","id","fields","frontmatter","ContinuousPostHeader","PostContent","CommentLink"],"sourceRoot":""}
{"version":3,"file":"component---src-pages-web-tsx-a995b25dcde34445df03.js","mappings":"8KAmDA,UA1BiD,YAa/C,QAZAA,KAYA,IAXEC,KACEC,aAAgBC,EAUpB,EAVoBA,MAAOC,EAU3B,EAV2BA,YAAaC,EAUxC,EAVwCA,QAGpCC,EAOJ,EAREC,kBACED,MAIAE,EAGJ,EALEC,KAEED,UAIJ,OACEE,EAAAA,EAAAA,IAACC,EAAAA,EAAD,CAAUR,MAAOA,EAAOC,YAAaA,EAAaQ,IAAKP,EAASQ,MAAOL,GAEnEM,OAAOC,QAAQT,GAAOU,KAAI,YAAkB,IAAhBC,EAAgB,KAAXC,EAAW,KAAXA,KAC/B,OAAOR,EAAAA,EAAAA,IAACS,EAAAA,EAAD,CAAgBC,IAAKH,EAAIC,KAAMA,GADxC,IAjBR,C","sources":["webpack://gatsby-starter-default/./src/pages/web.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { graphql } from 'gatsby';\nimport Template from 'components/Common/Template';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\nimport ContinuousPost from 'components/Post/Continuous/ContinuousPost';\n\ntype WebPageProps = {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        siteUrl: string\n      }\n    }\n    allMarkdownRemark: {\n      edges: object\n    }\n    file: {\n      childImageSharp: IGatsbyImageData\n      publicURL: string\n    }\n  }\n}\n\nconst WebPage: FunctionComponent<WebPageProps> = function({\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl },\n    },\n    allMarkdownRemark: {\n      edges\n    },\n    file: {\n      // childImageSharp: { gatsbyImageData },\n      publicURL,\n    }\n  }\n}){\n  return(\n    <Template title={title} description={description} url={siteUrl} image={publicURL}>\n      {\n        Object.entries(edges).map(([id, {node}]) => {\n          return <ContinuousPost key={id} node={node}/>\n      })\n      }\n      {/* <PostContent html={html}/> */}\n    </Template>\n  );\n}\n\nexport default WebPage;\n\n\nexport const getPostList = graphql`\n  query getPostList {\n    site{\n      siteMetadata{\n        title,\n        description,\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n      filter: { frontmatter: { category: { eq: \"web\" }}}\n    ) {\n      edges {\n        node {\n          html\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            category\n            tags\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height:400)\n              }\n            }\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      },\n      publicURL\n    }\n  }\n`"],"names":["data","site","siteMetadata","title","description","siteUrl","edges","allMarkdownRemark","publicURL","file","___EmotionJSX","Template","url","image","Object","entries","map","id","node","ContinuousPost","key"],"sourceRoot":""}
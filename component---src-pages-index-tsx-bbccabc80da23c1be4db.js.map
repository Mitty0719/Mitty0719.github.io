{"version":3,"file":"component---src-pages-index-tsx-bbccabc80da23c1be4db.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Main/screen/Future.tsx","webpack://gatsby-starter-default/./src/components/Main/screen/Scroll.tsx","webpack://gatsby-starter-default/./src/components/Main/screen/Pictures.tsx","webpack://gatsby-starter-default/./src/components/Main/AboutMe.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["import { FunctionComponent, useEffect, useRef, useState } from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst FutureCon = styled.section`\n  position: relative;\n  height: 100vh;\n`;\nconst FutureVerticalBackground = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, #fafafa 5%, rgba(0, 0, 0, 0) 0);\n  background-size: calc(100% / 8) 100%;\n`;\nconst FutureHorizontalBackground = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(0deg, #fafafa 5%, rgba(0, 0, 0, 0) 0);\n  background-size: 150px calc(100% / 6);\n`;\nconst AsteriskCon = styled.div`\n  @keyframes asterisk-con-rotate {\n    0% { transform: rotate(0deg) }\n    100% { transform: rotate(360deg) }\n  }\n\n  position: absolute;\n  top: calc(64.5px + 120px);\n  left: 180px;\n  animation: asterisk-con-rotate 12s infinite linear;\n  transform-origin: calc(64px / 2) calc(64px / 2);\n`;\nconst AsteriskIcon = styled.img`\n  @keyframes asterisk-rotate {\n    0% { transform: rotate(0deg) }\n    100% { transform: rotate(360deg) }\n  }\n  \n  position: absolute;\n  width: 64px;\n  top: 50%;\n  left: 50%;\n  animation: asterisk-rotate infinite linear;\n\n  &:nth-of-type(1) {\n    top:  -73.9px;\n    left: 0;\n    animation-duration: 8s;\n  }\n  &:nth-of-type(2) {\n    top: 36.95px;\n    left: -64px;\n    animation-duration: 9s;\n  }\n  &:nth-of-type(3) {\n    top: 36.95px;\n    left: 64px;\n    animation-duration: 10s;\n  }\n`;\n\nconst FutureTextCon = styled.div`\n  position: absolute;\n  bottom: 80px;\n  right: 80px;\n  font-size: 96px;\n  font-weight: bold;\n  letter-spacing: 10px;\n`;\nconst IconText = styled.div`\n  line-height: 116px;\n`\nconst FutureIcon = styled.span`\n  display: inline-block;\n  min-width: 320px;\n  text-align: center;\n  transform: translateY(5px);\n`;\nconst ChangedText = styled.div`\n  min-height: 116px;\n  line-height: 116px;\n  text-align: left;\n  cursor: pointer;\n`;\n\nconst Future : FunctionComponent = function () {\n  \n  const futureList = [\n    { title: 'Developer', color: '#fac901', icon: '⎇', },\n    { title: 'Leader', color: '#225095', icon: '⎈', }, // ☸\n    { title: 'Photographer', color: '#dd0100', icon: '❁', },\n    { title: 'Mentor', color: '#fac901', icon: '✍︎', },\n  ]\n  const dummyLetterList = ['#', '$', '%', '@', '~', '&', '+', '-', '=', '/'];\n  const [futureTextIndex, setFutureTextIndex] = useState(0);\n  const [changedText, setChangedText] = useState('');\n  const [changedTextColor, setChangedTextColor] = useState({});\n  const [changedIcon, setChangedIcon] = useState('');\n  const [isClickedChangedText, setIsClickedChangedText] = useState(false);\n  let changedLetterIndex = 0;\n  const [textChangeInterval, setTextChangeInterval] = useState(setInterval(()=>{}, 9999999));\n\n  useEffect(() => {\n    setFutureTextIndex(0);\n  }, []);\n\n  useEffect(() => {\n    clearInterval(textChangeInterval);\n    const {title, color, icon} = futureList[futureTextIndex];\n    setChangedTextColor({color: color});\n    setChangedIcon(icon);\n    setIsClickedChangedText(false);\n    typeTextEffect(title);\n\n    setTimeout(() => {\n      if(futureTextIndex >= futureList.length - 1) {\n        setFutureTextIndex(0);\n      } else {\n        setFutureTextIndex(futureTextIndex + 1);\n      }\n    }, 5000)\n  }, [futureTextIndex]);\n\n  function onClickChangedText() {\n    setIsClickedChangedText(true);\n  }\n\n  function typeTextEffect(targetText : String) {\n\n    const interval = setInterval(() => {\n      let showText = '';\n      for(let i = 0; i < targetText.length; i++) {\n        if(i <= changedLetterIndex) {\n          showText += targetText[i];\n        } else {\n          showText += dummyLetterList[Math.round(Math.random() * (dummyLetterList.length - 1))];\n        }\n      }\n\n      setChangedText(showText.toString());\n      changedLetterIndex++;\n    }, 80);\n\n    setTextChangeInterval(interval);\n  };\n\n  return (\n    <FutureCon>\n      <FutureVerticalBackground />\n      <FutureHorizontalBackground />\n      <AsteriskCon>\n        <AsteriskIcon src=\"../../../../image/icon_asterisk01.svg\" alt=\"\" />\n        <AsteriskIcon src=\"../../../../image/icon_asterisk02.svg\" alt=\"\" />\n        <AsteriskIcon src=\"../../../../image/icon_asterisk03.svg\" alt=\"\" />\n      </AsteriskCon>\n      <FutureTextCon>\n        <IconText>I'll be (<FutureIcon>{isClickedChangedText && changedIcon}</FutureIcon>)</IconText>\n        <ChangedText style={changedTextColor} onClick={onClickChangedText}>{changedText}</ChangedText>\n      </FutureTextCon>\n    </FutureCon>\n  );\n\n};\n\nexport default Future;","import { FunctionComponent } from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst ScrollCon = styled.section`\n  position: relative;\n`\nconst ScrollContent = styled.article`\n  display: flex;\n  justify-content: center;\n`;\nconst ScrollBox = styled.div`\n  width: 50vw;\n  height: 2400px;\n  background-color: #fdfdfd;\n  box-shadow: inset 0px 5px 10px rgba(0, 0, 0, 0.25);\n  transform: translateY(-40px);\n`;\n\nconst ScrollTextCon = styled.div`\n  position: absolute;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between;\n  top: 0;\n  left: 0;\n  padding: 0 80px;\n  width: 100%;\n  height: 90%;\n`;\nconst ScrollTextList = styled.ul`\n  position: absolute;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-evenly;\n  top: 0%;\n  left: 50%;\n  height: 100%;\n  writing-mode: vertical-rl;\n  text-orientation: mixed;\n  &:first-of-type {\n    transform: translateX(calc(-100% - 25vw - 36px));\n    li {\n      transform: rotate(180deg);\n    }\n  }\n  &:last-of-type {\n    transform: translateX(calc(25vw + 36px));\n  }\n`;\nconst ScrollTextItem = styled.li`\n  font-size: 36px;\n  font-weight: 800;\n`;\n\nconst Scroll : FunctionComponent = function () {\n  return (\n    <ScrollCon>\n      <ScrollContent>\n        <ScrollTextCon>\n          <ScrollTextList>\n            <ScrollTextItem>Bike</ScrollTextItem>\n            <ScrollTextItem>Constant</ScrollTextItem>\n            <ScrollTextItem>NERD</ScrollTextItem>\n          </ScrollTextList>\n          <ScrollTextList>\n            <ScrollTextItem>Steady</ScrollTextItem>\n            <ScrollTextItem>고구마</ScrollTextItem>\n            <ScrollTextItem>Fassional</ScrollTextItem>\n            <ScrollTextItem>Picture</ScrollTextItem>\n          </ScrollTextList>\n        </ScrollTextCon>\n        <ScrollBox>\n\n        </ScrollBox>\n      </ScrollContent>\n    </ScrollCon>\n  );\n\n};\n\nexport default Scroll;","import { FunctionComponent } from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst PictureCon = styled.section`\n  margin-top: 400px;\n`;\n\nconst PictureContent = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: flex-end;\n`;\nconst PictureTitleCon = styled.div`\n  width: 400px;\n  border-bottom: solid 4px #000;\n`;\nconst PictureTitle = styled.h3`\n  font-size: 36px;\n  text-align: right;\n`;\nconst PictureBox = styled.div`\n  margin-top: 30px;\n`;\nconst PictureList = styled.ul`\n  display: flex;\n  flex-flow: row wrap;\n  gap: 2px;\n`;\nconst PictureItem = styled.li`\n  position: relative;\n  display: inline-block;\n  flex: 1;\n  min-width: 440px;\n  height: 360px;\n  background-color: #fff;\n  overflow: hidden;\n`;\nconst PictureImage = styled.img`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 100%;\n  // height: 100%;\n  transform: translate(-50%, -50%);\n`;\n\n\nconst Pictures : FunctionComponent = function () {\n  return (\n    <PictureCon>\n      <PictureContent>\n        <PictureTitleCon>\n          <PictureTitle>PHOTOS</PictureTitle>\n        </PictureTitleCon>\n        <PictureBox>\n          <PictureList>\n            <PictureItem>\n              <PictureImage src=\"../../../../picture/picture_station.jpg\"></PictureImage>\n            </PictureItem>\n            <PictureItem>\n              <PictureImage src=\"../../../../picture/picture_sky.jpg\"></PictureImage>\n            </PictureItem>\n            <PictureItem>\n              <PictureImage src=\"../../../../picture/picture_persimmon.jpg\"></PictureImage>\n            </PictureItem>\n            <PictureItem>\n              <PictureImage src=\"../../../../picture/picture_traditional_market.jpg\"></PictureImage>\n            </PictureItem>\n            <PictureItem>\n              <PictureImage src=\"../../../../picture/picture_morning_ocean.jpg\"></PictureImage>\n            </PictureItem>\n            <PictureItem>\n              <PictureImage src=\"../../../../picture/picture_tunnel.jpg\"></PictureImage>\n            </PictureItem>\n          </PictureList>\n        </PictureBox>\n      </PictureContent>\n    </PictureCon>\n  );\n\n};\n\nexport default Pictures;","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport Future from './screen/Future';\nimport Scroll from './screen/Scroll';\nimport Pictures from './screen/Pictures';\nimport Resume from './screen/Resume';\n\nconst AboutMeWrap = styled.div`\n  width: 100%;\n  // height: 100vh;\n  background-color: #fff;\n  section {\n    width: 100%;\n    padding: 0 80px;\n  }\n`;\n\nconst AboutMe : FunctionComponent = function(){\n  return (\n    <AboutMeWrap>\n      <Future />\n      <Scroll />\n      <Pictures />\n      <Resume />\n    </AboutMeWrap>\n  );\n}\n\nexport default AboutMe;","import React, { FunctionComponent, useState, useEffect, useRef } from 'react';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\nimport { graphql } from 'gatsby';\nimport Template from 'components/Common/Template';\nimport AboutMe from 'components/Main/AboutMe';\n\ntype indexPageProps = {\n  location: {\n    search: string\n  },\n  data: {\n    site: {\n      siteMetadata: {\n        title: string,\n        description: string,\n        siteUrl: string\n      }\n    },\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData,\n      }\n      publicURL: string\n    }\n  },\n}\n\nconst IndexPage: FunctionComponent<indexPageProps> = function({\n  location: { search },\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl }\n    },\n    file: {\n      childImageSharp: { gatsbyImageData },\n      publicURL,\n    }\n  },\n}){\n\n  return (\n    <Template\n      title={title}\n      description={description}\n      url={siteUrl}\n      image={publicURL}>\n      <AboutMe/>\n    </Template>\n  )\n}\n\nexport default IndexPage;\n\nexport const getPostList = graphql`\n  query getPostList {\n    site{\n      siteMetadata{\n        title,\n        description,\n        siteUrl\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      },\n      publicURL\n    }\n  }\n`"],"names":["FutureCon","FutureVerticalBackground","FutureHorizontalBackground","AsteriskCon","AsteriskIcon","FutureTextCon","IconText","FutureIcon","ChangedText","futureList","title","color","icon","dummyLetterList","useState","futureTextIndex","setFutureTextIndex","changedText","setChangedText","changedTextColor","setChangedTextColor","changedIcon","setChangedIcon","isClickedChangedText","setIsClickedChangedText","changedLetterIndex","setInterval","textChangeInterval","setTextChangeInterval","useEffect","clearInterval","targetText","interval","showText","i","length","Math","round","random","toString","setTimeout","___EmotionJSX","src","alt","style","onClick","ScrollCon","target","name","styles","ScrollContent","ScrollBox","ScrollTextCon","ScrollTextList","ScrollTextItem","PictureCon","PictureContent","PictureTitleCon","PictureTitle","PictureBox","PictureList","PictureItem","PictureImage","AboutMeWrap","Future","Scroll","Pictures","Resume","location","search","data","site","siteMetadata","description","siteUrl","file","publicURL","childImageSharp","gatsbyImageData","Template","url","image","AboutMe"],"sourceRoot":""}
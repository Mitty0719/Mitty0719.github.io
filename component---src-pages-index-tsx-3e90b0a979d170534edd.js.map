{"version":3,"file":"component---src-pages-index-tsx-3e90b0a979d170534edd.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Main/AboutMain/MainText.tsx","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js","webpack://gatsby-starter-default/./src/components/Main/AboutMain/Text.ts","webpack://gatsby-starter-default/./src/components/Main/AboutMain/TextGroup.ts","webpack://gatsby-starter-default/./src/components/Main/AboutMain/AboutMainCanvas.ts","webpack://gatsby-starter-default/./src/components/Main/AboutMain/AboutMain.tsx","webpack://gatsby-starter-default/./src/components/Main/AboutMe.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport { keyframes } from '@emotion/react';\n\nconst keyframe = keyframes`\n  0%{\n    left: 0;\n    transform: translateX(-100%);\n  }\n  100%{\n    left: 140px;\n    transform: translateX(0);\n  }\n`;\n\nconst MainTextWrap = styled.div`\n  position: absolute;\n  bottom: 100px;\n  left: 0px;\n  transform: translateX(-100%);\n  animation: ${keyframe} 1s ease forwards;\n`;\n\nconst MainTextCon = styled.div`\n  font-size: 60px;\n  font-weight: bold;\n  span {\n    color: #82C76D;\n  }\n`;\n\nconst MainText:FunctionComponent = function(){\n  return (\n    <MainTextWrap>\n      <MainTextCon>\n        UX/UI 개발자<br/>\n        <span>이진우</span> 입니다.\n      </MainTextCon>\n    </MainTextWrap>\n  );\n}\n\nexport default MainText;","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}","class Text{\n  private x : number;\n  private y : number;\n  private isBlur : boolean;\n  private value : string;\n  private directionX : number;\n  private directionY : number;\n\n  constructor(value : string){\n    this.x = 0;\n    this.y = 0;\n    this.directionX = 1;\n    this.directionY = 0;\n    this.isBlur = false;\n    this.value = value;\n  }\n\n  move(){\n    this.x += this.directionX;\n    this.y += this.directionY;\n  }\n\n  draw(ctx: CanvasRenderingContext2D){\n    ctx.save();\n    ctx.fillText(this.value, this.x, this.y);\n    ctx.restore();\n  }\n}\n\nexport default Text;","import Text from \"./Text\";\n\nconst ABOUT_ME = [\n  'TEXT1', 'TEXT2', 'TEXT3', 'TEXT4', 'TEXT5', 'TEXT6', 'TEXT7', 'TEXT8', 'TEXT9', 'TEXT10',\n  'TEXT11', 'TEXT12', 'TEXT13', 'TEXT14', 'TEXT15', 'TEXT16', 'TEXT17', 'TEXT18', 'TEXT19', 'TEXT20',\n]\n\nclass TextGroup{\n  private textList : Array<Text>;\n  constructor(){\n    this.textList = [];\n    this.create();\n  }\n\n  create(){\n    for(let aboutText of ABOUT_ME){\n      this.textList.push(new Text(aboutText));\n    }\n  }\n\n  draw(ctx : CanvasRenderingContext2D){\n    for(let text of this.textList){\n      text.draw(ctx);\n    }\n  }\n}\n\nexport default TextGroup;","import TextGroup from './TextGroup';\n\nclass AboutMainCanvas{\n  private canvas: HTMLCanvasElement;\n  private ctx: CanvasRenderingContext2D | null;\n  private textGroup : TextGroup;\n  private parentNode: HTMLDivElement;\n\n  constructor(parentNode: HTMLDivElement){\n    this.canvas = document.createElement('canvas');\n    this.ctx = this.canvas.getContext('2d');\n    this.textGroup = new TextGroup();\n\n    this.parentNode = parentNode;\n    if(this.parentNode){\n      this.parentNode.appendChild(this.canvas);\n      this.resize();\n    }\n\n    window.requestAnimationFrame(this.draw.bind(this));\n  }\n  resize(){\n    this.canvas.width = this.parentNode.clientWidth;\n    this.canvas.height = this.parentNode.clientHeight;\n  }\n\n  draw(){\n    window.requestAnimationFrame(this.draw.bind(this));\n    if(this.ctx){\n      this.textGroup.draw(this.ctx);\n    }\n  }\n}\n\nexport default AboutMainCanvas;","import React, { FunctionComponent, useEffect, useRef } from 'react';\nimport styled from '@emotion/styled';\nimport MainText from './MainText';\nimport AboutMainCanvas from './AboutMainCanvas';\n\nconst AboutMainWrap = styled.section`\n  \n`;\n\nconst AboutMain:FunctionComponent = function(){\n  const aboutMainWrap = useRef<HTMLDivElement>(null);\n  let aboutMainCanvas;\n\n  useEffect(function(){\n    if(aboutMainWrap.current){\n      aboutMainCanvas = new AboutMainCanvas(aboutMainWrap.current);\n    }\n  }, [])\n\n  return (\n    <AboutMainWrap ref={aboutMainWrap}>\n      <MainText/>\n    </AboutMainWrap>\n  );\n}\n\nexport default AboutMain;","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport AboutMain from './AboutMain/AboutMain';\n\nconst AboutMeWrap = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: #fff;\n  section {\n    width: 100%;\n    height: 100vh;\n  }\n`;\n\nconst AboutMe : FunctionComponent = function(){\n  return (\n    <AboutMeWrap>\n      <AboutMain/>\n    </AboutMeWrap>\n  );\n}\n\nexport default AboutMe;","import React, { FunctionComponent, useState, useEffect, useRef } from 'react';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\nimport { graphql } from 'gatsby';\nimport Template from 'components/Common/Template';\nimport AboutMe from 'components/Main/AboutMe';\n\ntype indexPageProps = {\n  location: {\n    search: string\n  },\n  data: {\n    site: {\n      siteMetadata: {\n        title: string,\n        description: string,\n        siteUrl: string\n      }\n    },\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData,\n      }\n      publicURL: string\n    }\n  },\n}\n\nconst IndexPage: FunctionComponent<indexPageProps> = function({\n  location: { search },\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl }\n    },\n    file: {\n      childImageSharp: { gatsbyImageData },\n      publicURL,\n    }\n  },\n}){\n\n  return (\n    <Template\n      title={title}\n      description={description}\n      url={siteUrl}\n      image={publicURL}>\n      <AboutMe/>\n    </Template>\n  )\n}\n\nexport default IndexPage;\n\nexport const getPostList = graphql`\n  query getPostList {\n    site{\n      siteMetadata{\n        title,\n        description,\n        siteUrl\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      },\n      publicURL\n    }\n  }\n`"],"names":["strings","raw","keyframe","keyframes","slice","MainTextWrap","target","MainTextCon","name","styles","___EmotionJSX","Text","value","this","x","y","directionX","directionY","isBlur","move","draw","ctx","save","fillText","restore","ABOUT_ME","TextGroup","textList","create","aboutText","push","AboutMainCanvas","parentNode","canvas","document","createElement","getContext","textGroup","appendChild","resize","window","requestAnimationFrame","bind","width","clientWidth","height","clientHeight","AboutMainWrap","aboutMainWrap","useRef","useEffect","current","ref","MainText","AboutMeWrap","AboutMain","location","search","data","site","siteMetadata","title","description","siteUrl","file","publicURL","childImageSharp","gatsbyImageData","Template","url","image","AboutMe"],"sourceRoot":""}
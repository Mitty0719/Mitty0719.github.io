{"version":3,"file":"component---src-pages-index-tsx-1869ef93899d1ec42a7b.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Main/screen/Future.tsx","webpack://gatsby-starter-default/./src/components/Main/screen/Pictures.tsx","webpack://gatsby-starter-default/./static/js/scrollEvent.js","webpack://gatsby-starter-default/./src/components/Main/screen/GoldenRatio.tsx","webpack://gatsby-starter-default/./src/components/Main/AboutMe.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["import { FunctionComponent, useEffect, useRef, useState } from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst FutureCon = styled.section`\n  position: relative;\n  height: 100vh;\n  overflow: hidden;\n`;\nconst FutureVerticalBackground = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, #fafafa 2%, rgba(0, 0, 0, 0) 0);\n  background-size: calc(100% / 8) 100%;\n`;\nconst FutureHorizontalBackground = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(0deg, #fafafa 2%, rgba(0, 0, 0, 0) 0);\n  background-size: 150px calc(100% / 6);\n`;\nconst AsteriskCon = styled.div`\n  @keyframes asterisk-con-rotate {\n    0% { transform: rotate(0deg) }\n    100% { transform: rotate(360deg) }\n  }\n\n  position: absolute;\n  top: calc(64.5px + 120px);\n  right: 180px;\n  animation: asterisk-con-rotate 12s infinite linear;\n  transform-origin: calc(64px / 2) calc(64px / 2);\n`;\nconst AsteriskIcon = styled.img`\n  @keyframes asterisk-rotate {\n    0% { transform: rotate(0deg) }\n    100% { transform: rotate(360deg) }\n  }\n  \n  position: absolute;\n  width: 64px;\n  top: 50%;\n  left: 50%;\n  animation: asterisk-rotate infinite linear;\n\n  &:nth-of-type(1) {\n    top:  -73.9px;\n    left: 0;\n    animation-duration: 8s;\n  }\n  &:nth-of-type(2) {\n    top: 36.95px;\n    left: -64px;\n    animation-duration: 9s;\n  }\n  &:nth-of-type(3) {\n    top: 36.95px;\n    left: 64px;\n    animation-duration: 10s;\n  }\n`;\n\nconst FutureTextCon = styled.div`\n  position: absolute;\n  bottom: 80px;\n  left: 80px;\n  font-weight: bold;\n\n  @media (max-width: 1023px){\n    bottom: 40px;\n  }\n`;\nconst IconText = styled.div`\n  font-size: 72px;\n  line-height: 116px;\n\n  @media (max-width: 1023px){\n    font-size: 48px;\n    line-height: 72px;\n  }\n`\nconst FutureIcon = styled.span`\n  display: inline-block;\n  min-width: 320px;\n  text-align: center;\n  transform: translateY(5px);\n\n  @media (max-width: 1023px){\n    min-width: 120px;\n  }\n`;\nconst ChangedText = styled.div`\n  min-height: 116px;\n  font-size: 160px;\n  line-height: 116px;\n  text-align: left;\n  cursor: pointer;\n\n  @media (max-width: 1023px){\n    font-size: 72px;\n    line-height: 72px;\n  }\n`;\n\nconst Future : FunctionComponent = function () {\n  \n  const futureList = [\n    { title: 'Developer', color: '#fac901', icon: '⎇', },\n    { title: 'Leader', color: '#225095', icon: '⎈', }, // ☸\n    { title: 'Photographer', color: '#dd0100', icon: '❁', },\n    { title: 'Mentor', color: '#fac901', icon: '✍︎', },\n  ]\n  const dummyLetterList = ['#', '$', '%', '@', '~', '&', '+', '-', '=', '/'];\n  const [futureTextIndex, setFutureTextIndex] = useState(0);\n  const [changedText, setChangedText] = useState('');\n  const [changedTextColor, setChangedTextColor] = useState({});\n  const [changedIcon, setChangedIcon] = useState('');\n  const [isClickedChangedText, setIsClickedChangedText] = useState(false);\n  let changedLetterIndex = 0;\n  const [textChangeInterval, setTextChangeInterval] = useState(setInterval(()=>{}, 9999999));\n\n  useEffect(() => {\n    setFutureTextIndex(0);\n  }, []);\n\n  useEffect(() => {\n    clearInterval(textChangeInterval);\n    const {title, color, icon} = futureList[futureTextIndex];\n    setChangedTextColor({color: color});\n    setChangedIcon(icon);\n    setIsClickedChangedText(false);\n    typeTextEffect(title);\n\n    setTimeout(() => {\n      if(futureTextIndex >= futureList.length - 1) {\n        setFutureTextIndex(0);\n      } else {\n        setFutureTextIndex(futureTextIndex + 1);\n      }\n    }, 5000)\n  }, [futureTextIndex]);\n\n  function onClickChangedText() {\n    setIsClickedChangedText(true);\n  }\n\n  function typeTextEffect(targetText : String) {\n\n    const interval = setInterval(() => {\n      let showText = '';\n      for(let i = 0; i < targetText.length; i++) {\n        if(i <= changedLetterIndex) {\n          showText += targetText[i];\n        } else {\n          showText += dummyLetterList[Math.round(Math.random() * (dummyLetterList.length - 1))];\n        }\n      }\n\n      setChangedText(showText.toString());\n      changedLetterIndex++;\n    }, 80);\n\n    setTextChangeInterval(interval);\n  };\n\n  return (\n    <FutureCon>\n      <FutureVerticalBackground />\n      <FutureHorizontalBackground />\n      <AsteriskCon>\n        <AsteriskIcon src=\"../../../../image/icon_asterisk01.svg\" alt=\"\" />\n        <AsteriskIcon src=\"../../../../image/icon_asterisk02.svg\" alt=\"\" />\n        <AsteriskIcon src=\"../../../../image/icon_asterisk03.svg\" alt=\"\" />\n      </AsteriskCon>\n      <FutureTextCon>\n        <IconText>I'll be (<FutureIcon>{isClickedChangedText && changedIcon}</FutureIcon>)</IconText>\n        <ChangedText style={changedTextColor} onClick={onClickChangedText}>{changedText}</ChangedText>\n      </FutureTextCon>\n    </FutureCon>\n  );\n\n};\n\nexport default Future;","import { FunctionComponent } from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst PictureCon = styled.section`\n  margin-top: 400px;\n`;\n\nconst PictureContent = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: flex-end;\n`;\nconst PictureTitleCon = styled.div`\n  width: 400px;\n  border-bottom: solid 4px #000;\n`;\nconst PictureTitle = styled.h3`\n  font-size: 36px;\n  text-align: right;\n`;\nconst PictureBox = styled.div`\n  margin-top: 30px;\n`;\nconst PictureList = styled.ul`\n  display: flex;\n  flex-flow: row wrap;\n  gap: 2px;\n`;\nconst PictureItem = styled.li`\n  position: relative;\n  display: inline-block;\n  flex: 1;\n  min-width: 440px;\n  height: 360px;\n  background-color: #fff;\n  overflow: hidden;\n`;\nconst PictureImage = styled.img`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 100%;\n  // height: 100%;\n  transform: translate(-50%, -50%);\n`;\n\n\nconst Pictures : FunctionComponent = function () {\n  return (\n    <PictureCon>\n      <PictureContent>\n        <PictureTitleCon>\n          <PictureTitle>PHOTOS</PictureTitle>\n        </PictureTitleCon>\n        <PictureBox>\n          <PictureList>\n            <PictureItem>\n              <PictureImage src=\"../../../../picture/picture_station.jpg\"></PictureImage>\n            </PictureItem>\n            <PictureItem>\n              <PictureImage src=\"../../../../picture/picture_sky.jpg\"></PictureImage>\n            </PictureItem>\n            <PictureItem>\n              <PictureImage src=\"../../../../picture/picture_persimmon.jpg\"></PictureImage>\n            </PictureItem>\n            <PictureItem>\n              <PictureImage src=\"../../../../picture/picture_traditional_market.jpg\"></PictureImage>\n            </PictureItem>\n            <PictureItem>\n              <PictureImage src=\"../../../../picture/picture_morning_ocean.jpg\"></PictureImage>\n            </PictureItem>\n            <PictureItem>\n              <PictureImage src=\"../../../../picture/picture_tunnel.jpg\"></PictureImage>\n            </PictureItem>\n          </PictureList>\n        </PictureBox>\n      </PictureContent>\n    </PictureCon>\n  );\n\n};\n\nexport default Pictures;","class ScrollEvent {\r\n  constructor() {\r\n    this.sectionNodeList = document.querySelectorAll('.scroll-section');\r\n    this.scrollSectionList = [];\r\n    this.scrollIndex = 0;\r\n    \r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.createScrollSection(this.sectionNodeList);\r\n    window.addEventListener('scroll', this.scrollLoop.bind(this));\r\n  }\r\n\r\n  createScrollSection(nodeList) {\r\n    let prevHeight = 0;\r\n    for(const node of nodeList) {\r\n      this.scrollSectionList.push(new ScrollSection(node, prevHeight));\r\n      prevHeight += node.offsetHeight;\r\n    }\r\n  }\r\n\r\n  scrollLoop() {\r\n    // this.scrollSectionList[this.scrollIndex].scrollLoop(scrollY, this.addScrollIndex.bind(this));\r\n    for(const section of this.scrollSectionList) {\r\n      section.scrollLoop(scrollY, this.addScrollIndex.bind(this));\r\n    }\r\n  }\r\n\r\n  addScrollIndex(value) {\r\n    this.scrollIndex += value;\r\n  }\r\n\r\n  addScrollEvent(options) {\r\n    const {id} = options;\r\n    for(const section of this.scrollSectionList) {\r\n      if(section.haveNode(id)) {\r\n        section.addScrollEvent(options);\r\n        return;\r\n      }\r\n    }\r\n    console.error('지정한 id를 가진 node가 없습니다.');\r\n  }\r\n  addScrollEventTransform(options) {\r\n    const {id} = options;\r\n    for(const section of this.scrollSectionList) {\r\n      if(section.haveNode(id)) {\r\n        section.addScrollEventTransform(options);\r\n        return;\r\n      }\r\n    }\r\n    console.error('지정한 id를 가진 node가 없습니다.');\r\n  }\r\n  addScrollClass(options) {\r\n    const {id} = options;\r\n    for(const section of this.scrollSectionList) {\r\n      if(section.haveNode(id)) {\r\n        section.addScrollClass(options);\r\n        return;\r\n      }\r\n    }\r\n    console.error('지정한 id를 가진 node가 없습니다.');\r\n  }\r\n}\r\n\r\nclass ScrollSection {\r\n  constructor(node, prevHeight) {\r\n    this.node = node;\r\n    this.width = this.node.offsetWidth;\r\n    this.height = this.node.offsetHeight;\r\n    this.startY = prevHeight;\r\n    this.endY = this.startY + this.node.offsetHeight;\r\n    this.ratio = 0;\r\n    this.events = [];\r\n  }\r\n\r\n  scrollLoop(scrollY, addScrollIndex) {\r\n    // calcHeight\r\n    const targetY = scrollY - this.startY;\r\n    let ratio = targetY / this.height;\r\n\r\n    if(ratio < 0) {\r\n      ratio = 0;\r\n      addScrollIndex(-1);\r\n    } else if(ratio > 1) {\r\n      ratio = 1;\r\n      addScrollIndex(1);\r\n    }\r\n    this.ratio = ratio;\r\n\r\n    // callEvents\r\n    for(const event of this.events) {\r\n      event();\r\n    }\r\n  }\r\n\r\n  addScrollEvent({id, style, startRatio, endRatio, startValue, endValue, suffix = ''}) {\r\n    const element = this.node.querySelector(`#${id}`);\r\n    const event = function() {\r\n      if(this.ratio < startRatio) {\r\n        element.style[style] = `${startValue}${suffix}`;\r\n      } else if(this.ratio >= startRatio && this.ratio <= endRatio) {\r\n        const value = (endValue - startValue) * ((this.ratio - startRatio) / (endRatio - startRatio)) + startValue;\r\n        element.style[style] = `${value}${suffix}`;\r\n      } else if(this.ratio > endRatio) {\r\n        element.style[style] = `${endValue}${suffix}`;\r\n      }\r\n    }\r\n    this.events.push(event.bind(this));\r\n  }\r\n  addScrollEventTransform({id, transformStyle, startRatio, endRatio }) {\r\n    const element = this.node.querySelector(`#${id}`);\r\n    const event = function() {\r\n      if(this.ratio < startRatio) {\r\n        // let valueStr = ``;\r\n        // for(const styleItem of transformStyle) {\r\n        //   const {style, startValue, suffix} = styleItem;\r\n        //   const value = startValue;\r\n        //   valueStr += ` ${style}(${value}${suffix || ''})`;\r\n        // }\r\n        // element.style.transform = valueStr;\r\n      } else if(this.ratio >= startRatio && this.ratio <= endRatio) {\r\n        const ratioPercent = (this.ratio - startRatio) / (endRatio - startRatio);\r\n        let valueStr = ``;\r\n        for(const styleItem of transformStyle) {\r\n          const {style, startValue, endValue, suffix} = styleItem;\r\n          const value = (endValue - startValue) * ratioPercent + startValue;\r\n          valueStr += ` ${style}(${value}${suffix || ''})`;\r\n        }\r\n        element.style.transform = valueStr;\r\n      } else if(this.ratio > endRatio) {\r\n        // let valueStr = ``;\r\n        // for(const styleItem of transformStyle) {\r\n        //   const {style, endValue, suffix} = styleItem;\r\n        //   const value = endValue;\r\n        //   valueStr += ` ${style}(${value}${suffix || ''})`;\r\n        // }\r\n        // element.style.transform = valueStr;\r\n      }\r\n    }\r\n    this.events.push(event.bind(this));\r\n  }\r\n\r\n  addScrollClass({id, classList, startRatio, endRatio = 1}) {\r\n    const element = this.node.querySelector(`#${id}`);\r\n    const event = function() {\r\n      if(this.ratio >= startRatio && this.ratio <= endRatio) {\r\n        for(const className of classList) {\r\n          element.classList.add(className);\r\n        }\r\n      } else {\r\n        for(const className of classList) {\r\n          element.classList.remove(className);\r\n        }\r\n      }\r\n    }\r\n    this.events.push(event.bind(this));\r\n  }\r\n\r\n  haveNode(selector) {\r\n    if(this.node.querySelectorAll(`.${selector}, #${selector}`).length) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default ScrollEvent;","import { FunctionComponent, useEffect, useRef } from \"react\";\nimport styled from \"@emotion/styled\";\nimport ScrollEvent from '../../../../static/js/scrollEvent';\n\nconst GoldenRatioCon = styled.section`\n  position: relative;\n  width: 100vw;\n  height: 500vh;\n  margin: 500px 0;\n`\nconst GoldenRatioCanvas = styled.canvas`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100vh;\n  &.sticky-elem {\n    position: sticky;\n  }\n`;\nconst GOLDEN_RATIO = 1.618;\n\nconst GoldenRatio : FunctionComponent = function () {\n\n  const refContainer = useRef(null);\n  const refCanvas = useRef(null);\n  let container : HTMLDivElement | null = null;\n  let canvas : HTMLCanvasElement | null = null;\n  let eventObj : any;\n\n  useEffect(() => {\n    const options = {\n      threshold: 0.75,\n    };\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach(entry => {\n        if(entry.isIntersecting) {\n          canvasApp.isShowing = true;\n        } else {\n        }\n      });\n    }, options);\n\n    if(refContainer.current) {\n      container = refContainer.current as HTMLDivElement;\n      container?.classList.add('scroll-section');\n      eventObj = new ScrollEvent();\n    }\n    if(refCanvas.current) {\n      canvas = refCanvas.current as HTMLCanvasElement;\n      canvas.id = 'goldenRatio-canvas';\n      eventObj.addScrollClass({id: 'goldenRatio-canvas', classList: ['sticky-elem'], startRatio: 0, endRatio: 1});\n      \n      observer.observe(canvas);\n    }\n\n    const canvasApp = new GoldenRatioCanvasApp(canvas!, loadImages());\n\n  }, []);\n\n  function loadImages() {\n    const images = [];\n    const prefix = `../../../../video/goldenRatio/image`;\n    const imageCnt = 499;\n    \n    let image = null;\n    for(let i = 1; i <= imageCnt; i++ ) {\n      image = new Image;\n      image.src = prefix + (String(i).padStart(4, '0')) + '.jpg';\n      images.push(image);\n    }\n\n    return {images, imageCnt};\n  }\n\n  return (\n    <GoldenRatioCon ref={refContainer}>\n      <GoldenRatioCanvas ref={refCanvas}/>\n    </GoldenRatioCon>\n  );\n\n};\n\nclass GoldenRatioCanvasApp {\n  canvas : HTMLCanvasElement;\n  ctx : CanvasRenderingContext2D | null;\n  stageWidth : number;\n  stageHeight : number;\n  imageList : { images: Array<HTMLImageElement>, imageCnt: number };\n  imageSequence: number;\n  goldenRatioWidth : number;\n  goldenRatioHeight : number;\n  goldenRatioItemList : Array<Item>;\n  isShowing : boolean;\n\n  constructor (canvas : HTMLCanvasElement, imageList: {images: Array<HTMLImageElement>, imageCnt: number}) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n    this.stageWidth = 0;\n    this.stageHeight = 0;\n    this.imageList = imageList;\n    this.imageSequence = 0;\n    this.goldenRatioWidth = 0;\n    this.goldenRatioHeight = 0;\n    this.goldenRatioItemList = [];\n    this.isShowing = false;\n    \n    this.resize();\n    this.createGoldenRatioItem();\n\n    window.requestAnimationFrame(this.canvasLoop.bind(this));\n    window.addEventListener('resize', this.resize.bind(this));\n  }\n\n  resize () {\n    console.log('hi');\n    this.stageWidth = window.innerWidth;\n    this.stageHeight = window.innerHeight;\n\n    this.canvas.width = this.stageWidth;\n    this.canvas.height = this.stageHeight;\n\n    for(const item of this.goldenRatioItemList) {\n      item.resize(this.stageWidth, this.stageHeight, this.goldenRatioWidth, this.goldenRatioHeight);\n    }\n  }\n\n  canvasLoop() {\n    window.requestAnimationFrame(this.canvasLoop.bind(this));\n    this.ctx!.clearRect(0, 0, this.stageWidth, this.stageHeight);\n\n    for(const item of this.goldenRatioItemList) {\n      item.draw(this.ctx!, this.imageList.images[this.imageSequence], this.isShowing);\n    }\n    this.imageSequence++;\n    if(this.imageSequence == this.imageList.imageCnt) {\n      this.imageSequence = 0;\n    }\n  }\n\n  createGoldenRatioItem() {\n    const goldenRatioItemCnt = 8;\n\n    let width = 600;\n    let height = width * GOLDEN_RATIO;\n    let prevItem : Item | null = null;\n\n    this.goldenRatioWidth = width;\n    this.goldenRatioHeight = height;\n\n    for(let i = 0; i <= goldenRatioItemCnt; i++) {\n      const item : Item = new Item(width, i, prevItem, this.stageWidth, this.stageHeight, this.goldenRatioWidth, this.goldenRatioHeight);\n      \n      this.goldenRatioItemList.push(item);\n      \n      width = height - width;\n      height = width * GOLDEN_RATIO;\n\n      prevItem = item;\n    }\n  }\n}\n\nclass Item {\n  targetX: number;\n  targetY: number;\n  minX: number;\n  minY: number;\n  width: number;\n  xGap: number;\n  yGap: number;\n  goldenRatioX: number;\n  goldenRatioY: number;\n  moveX: number;\n  moveY: number;\n  opacity: number;\n  opacitySpeed: number;\n\n  color: string;\n\n  constructor(width: number, index: number, prevItem: Item | null, stageWidth : number, stageHeight : number, goldenRatioWidth : number, goldenRatioHeight : number) {\n    this.targetX = stageWidth / 2 - goldenRatioWidth / 2;\n    this.targetY = stageHeight / 2 - goldenRatioHeight / 2;\n    this.minX = stageWidth / 2 - goldenRatioWidth / 2;\n    this.minY = stageHeight / 2 - goldenRatioHeight / 2 - 1200;\n    this.width = width;\n    this.xGap = 0;\n    this.yGap = 0;\n    this.goldenRatioX = 0;\n    this.goldenRatioY = 0;\n    this.color = 'black';\n    this.moveX = 0;\n    this.moveY = (Math.random() * 10 + 20) / -500;\n    this.opacity = 0;\n    this.opacitySpeed = 0.01;\n\n    switch(index) {\n      case 0 : this.color = 'red'; break;\n      case 1 : this.color = 'green'; break;\n      case 2 : this.color = 'blue'; break;\n      case 3 : this.color = 'gray'; break;\n      case 4 : this.color = 'yellow'; break;\n      case 5 : this.color = 'skyblue'; break;\n      case 6 : this.color = 'yellowgreen'; break;\n      case 7 : this.color = 'green'; break;\n      case 8 : this.color = 'red'; break;\n    }\n\n    this.calcIndexToCoordinate(index, prevItem);\n  }\n\n  resize(stageWidth : number, stageHeight : number, goldenRatioWidth : number, goldenRatioHeight : number) {\n    this.targetX = stageWidth / 2 - goldenRatioWidth / 2;\n    this.targetY = stageHeight / 2 - goldenRatioHeight / 2;\n    this.minX = stageWidth / 2 - goldenRatioWidth / 2;\n    this.minY = stageHeight / 2 - goldenRatioHeight / 2 - 1200;\n  }\n\n  draw(ctx : CanvasRenderingContext2D, image : CanvasImageSource, isShowing : boolean) {\n    if(isShowing) {\n      if(Math.abs(this.targetX - this.minX) > Math.abs(this.moveX)) {\n        this.minX += this.moveX;\n      }\n      if(Math.abs(this.targetY - this.minY) > Math.abs(this.moveY)) {\n        this.minY += (this.minY - this.targetY) * this.moveY;\n      }\n      this.opacity += this.opacitySpeed;\n    }\n\n    // ctx.fillRect(this.minX, this.minY, this.width, this.width);\n    ctx.globalAlpha = this.opacity;\n    ctx.fillStyle = this.color;\n    // ctx.fillRect(this.minX + this.goldenRatioX, this.minY + this.goldenRatioY, this.width, this.width);\n    ctx.drawImage(image, this.goldenRatioX, this.goldenRatioY, this.width, this.width , this.minX + this.goldenRatioX, this.minY + this.goldenRatioY, this.width, this.width);\n  }\n\n  calcIndexToCoordinate(index: number, prevItem : Item | null) {\n    const nextItemWidth = Math.round((this.width * GOLDEN_RATIO) - this.width);\n    const prevGolenRatioX = prevItem?.goldenRatioX || 0;\n    const prevGolenRatioY = prevItem?.goldenRatioY || 0;\n    const prevWidth = prevItem?.width || 0;\n    switch(index % 4) {\n      case 0: \n        if(index) {\n          this.goldenRatioX = prevGolenRatioX + prevWidth;\n          this.goldenRatioY = prevGolenRatioY;\n        }\n        break;\n      case 1: \n        this.goldenRatioX = prevGolenRatioX + nextItemWidth;\n        this.goldenRatioY = prevGolenRatioY + prevWidth;\n        break;\n      case 2:\n        this.goldenRatioX = prevGolenRatioX - prevWidth + nextItemWidth;\n        this.goldenRatioY = prevGolenRatioY + nextItemWidth;\n        break;\n      case 3:\n        this.goldenRatioX = prevGolenRatioX;\n        this.goldenRatioY = prevGolenRatioY - this.width;\n        break;\n    }\n\n  }\n}\n\nexport default GoldenRatio;","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport Future from './screen/Future';\nimport Scroll from './screen/Scroll';\nimport Pictures from './screen/Pictures';\nimport Resume from './screen/Resume';\nimport GoldenRatio from './screen/GoldenRatio';\n\nconst AboutMeWrap = styled.div`\n  width: 100%;\n  // height: 100vh;\n  background-color: #fff;\n  section {\n    width: 100%;\n    padding: 0 80px;\n\n    @media (max-width: 1023px){\n      padding: 0;\n    }\n  }\n`;\n\nconst AboutMe : FunctionComponent = function(){\n  return (\n    <AboutMeWrap>\n      <Future />\n      <GoldenRatio />\n      {/* <Scroll /> */}\n      <Pictures />\n      <Resume />\n    </AboutMeWrap>\n  );\n}\n\nexport default AboutMe;","import React, { FunctionComponent, useState, useEffect, useRef } from 'react';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\nimport { graphql } from 'gatsby';\nimport Template from 'components/Common/Template';\nimport AboutMe from 'components/Main/AboutMe';\n\ntype indexPageProps = {\n  location: {\n    search: string\n  },\n  data: {\n    site: {\n      siteMetadata: {\n        title: string,\n        description: string,\n        siteUrl: string\n      }\n    },\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData,\n      }\n      publicURL: string\n    }\n  },\n}\n\nconst IndexPage: FunctionComponent<indexPageProps> = function({\n  location: { search },\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl }\n    },\n    file: {\n      childImageSharp: { gatsbyImageData },\n      publicURL,\n    }\n  },\n}){\n\n  return (\n    <Template\n      title={title}\n      description={description}\n      url={siteUrl}\n      image={publicURL}>\n      <AboutMe/>\n    </Template>\n  )\n}\n\nexport default IndexPage;\n\nexport const getPostList = graphql`\n  query getPostList {\n    site{\n      siteMetadata{\n        title,\n        description,\n        siteUrl\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      },\n      publicURL\n    }\n  }\n`"],"names":["FutureCon","target","name","styles","FutureVerticalBackground","FutureHorizontalBackground","AsteriskCon","AsteriskIcon","FutureTextCon","IconText","FutureIcon","ChangedText","futureList","title","color","icon","dummyLetterList","useState","futureTextIndex","setFutureTextIndex","changedText","setChangedText","changedTextColor","setChangedTextColor","changedIcon","setChangedIcon","isClickedChangedText","setIsClickedChangedText","changedLetterIndex","setInterval","textChangeInterval","setTextChangeInterval","useEffect","clearInterval","targetText","interval","showText","i","length","Math","round","random","toString","setTimeout","___EmotionJSX","src","alt","style","onClick","PictureCon","PictureContent","PictureTitleCon","PictureTitle","PictureBox","PictureList","PictureItem","PictureImage","ScrollEvent","this","sectionNodeList","document","querySelectorAll","scrollSectionList","scrollIndex","init","createScrollSection","window","addEventListener","scrollLoop","bind","nodeList","prevHeight","node","push","ScrollSection","offsetHeight","scrollY","addScrollIndex","value","addScrollEvent","options","id","section","haveNode","console","error","addScrollEventTransform","addScrollClass","width","offsetWidth","height","startY","endY","ratio","events","event","startRatio","endRatio","startValue","endValue","suffix","element","querySelector","transformStyle","ratioPercent","valueStr","styleItem","transform","classList","className","add","remove","selector","GoldenRatioCon","GoldenRatioCanvas","GOLDEN_RATIO","GoldenRatioCanvasApp","canvas","imageList","ctx","getContext","stageWidth","stageHeight","imageSequence","goldenRatioWidth","goldenRatioHeight","goldenRatioItemList","isShowing","resize","createGoldenRatioItem","requestAnimationFrame","canvasLoop","log","innerWidth","innerHeight","clearRect","draw","images","imageCnt","prevItem","item","Item","index","targetX","targetY","minX","minY","xGap","yGap","goldenRatioX","goldenRatioY","moveX","moveY","opacity","opacitySpeed","calcIndexToCoordinate","image","abs","globalAlpha","fillStyle","drawImage","nextItemWidth","prevGolenRatioX","prevGolenRatioY","prevWidth","eventObj","refContainer","useRef","refCanvas","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","canvasApp","threshold","current","observe","prefix","Image","String","padStart","loadImages","ref","AboutMeWrap","Future","GoldenRatio","Pictures","Resume","location","search","data","site","siteMetadata","description","siteUrl","file","publicURL","childImageSharp","gatsbyImageData","Template","url","AboutMe"],"sourceRoot":""}
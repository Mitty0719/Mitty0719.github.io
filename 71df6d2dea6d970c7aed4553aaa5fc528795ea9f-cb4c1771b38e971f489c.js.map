{"version":3,"file":"71df6d2dea6d970c7aed4553aaa5fc528795ea9f-cb4c1771b38e971f489c.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Post/Continuous/ContinuousPost.tsx"],"sourcesContent":["import React, { FunctionComponent, useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport { PostFrontmatterType } from 'types/PostItem.types';\n\ntype ContinuousPostProps = {\n  edges: Array<Array<{\n    node: {\n      id: string,\n      html: string,\n      fields: {\n        slug: string\n      }\n      frontmatter: PostFrontmatterType\n    }\n  }>>\n}\n\nconst ContinuousPostWrap = styled.div`\n  margin: 80px 0;\n  overflow: hidden;\n`;\nconst PostContainer = styled.div`\n  display: flex;\n  width: 100%;\n  height: 2400px;\n  gap: 80px;\n`;\nconst PostColumn = styled.div`\n  flex: 1;\n  height: 100%;\n`;\n\nconst PostItem = styled.div`\n  position: relative;\n  width: 100%;\n  min-height: 200px;\n  height: 500px;\n  border: 8px solid #ccc;\n  border-radius: 48px;\n  margin-bottom: 80px;\n  overflow: hidden;\n  cursor: pointer;\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.08);\n\n  &:hover {\n    box-shadow: 10px 10px 30px rgba(0, 0, 0, 0.08);\n  }\n\n  &.hType1 {\n    height: 300px;\n  }\n  &.hType2 {\n    height: 400px;\n  }\n  &.hType3 {\n    height: 500px;\n  }\n`;\nconst PostItemTitle = styled.div`\n  position: absolute;\n  bottom: 20px;\n  right: 20px;\n  font-size: 28px;\n`;\n\nconst ContinuousPost: FunctionComponent<ContinuousPostProps> = function(edges : ContinuousPostProps){\n  \n  function createColumn() {\n    const columnLength = 3;\n    const itemList = edges.edges;\n\n    const columns = [];\n    for(let i = 0; i < columnLength; i++) {\n      columns.push(\n        <PostColumn>\n          {createItem(itemList, i, columnLength)}\n        </PostColumn>\n      );\n    }\n\n    return columns;\n  }\n\n  function createItem(itemList: any, i : number, columnLength : number) {\n    const items = [];\n    const backgroundColors = ['#fac901','#225095', '#dd0100'];\n    for(let j = 0; j < itemList.length; j++) {\n      if(j % columnLength == i) {\n        const fromtmatter = itemList[j][1].node.frontmatter;\n        const backgroundColor = backgroundColors[Math.round(Math.random() * backgroundColors.length)];\n        items.push(\n            <PostItem className=\"drag-item\" style={{borderColor: backgroundColor}}>\n              <PostItemTitle>\n                {fromtmatter.title}\n              </PostItemTitle>\n            </PostItem>\n          );\n        }\n    }\n    return items;\n  }\n  \n  useEffect(() => {\n    new ScrollList();\n  }, [])\n\n\n  return <ContinuousPostWrap>\n      <PostContainer className=\"scroll-con\">\n        { createColumn() }\n      </PostContainer>\n  </ContinuousPostWrap>\n}\n\nexport default ContinuousPost;\n\nclass ScrollList {\n\n  target : HTMLDivElement | null;\n  cols : Array<ScrollColumn | null>;\n  originX : number;\n  originY : number;\n  targetX : number;\n  targetY : number;\n  centerX : number;\n  centerY : number;\n  timer : any | null;\n\n\n  constructor() {\n    this.target = document.querySelector(\".scroll-con\");\n    this.cols = [];\n    this.originX = this.target!.clientLeft || 0;\n    this.originY = this.target!.clientTop || 0;\n    this.targetX = 0;\n    this.targetY = 0;\n    this.centerX = window.innerWidth / 2;\n    this.centerY = window.innerHeight / 2;\n    this.timer = null;\n\n    window.addEventListener(\"mousemove\", this.moveMouse.bind(this));\n    window.addEventListener(\"scroll\", this.scrollWindow.bind(this));\n\n    for (const col of this.target!.children) {\n      this.cols.push(new ScrollColumn(col as HTMLDivElement));\n    }\n\n    setInterval(() => this.loop.call(this), 10);\n  }\n\n  loop() {\n    this.moveItem();\n\n    for (const col of this.cols) {\n      col!.loop();\n    }\n  }\n\n  moveItem() {\n    // const s = -0.0008;\n    // this.originX += (this.targetX - this.originX) * s;\n    // this.originY += (this.targetY - this.originY) * s;\n\n    const s = -0.08;\n    this.originX = this.targetX * s;\n    this.originY = this.targetY * s;\n    this.target!.style.transform = `translate(${this.originX}px, ${this.originY}px) scale(0.8)`;\n  }\n\n  moveMouse(e : MouseEvent) {\n    this.targetX = e.clientX - this.centerX;\n    this.targetY = e.clientY - this.centerY;\n  }\n  scrollWindow() {\n    if (this.timer !== null) {\n      clearTimeout(this.timer);\n    }\n    this.timer = setTimeout(() => {\n      for (const col of this.cols) {\n        col!.scrollWindow(scrollY);\n      }\n    }, 150);\n  }\n}\n\nclass ScrollColumn {\n  target : HTMLDivElement | null;\n  originY : number;\n  prevTargetY : number;\n  targetY : number;\n  speed : number;\n\n  constructor(item : HTMLDivElement) {\n    this.target = item;\n    this.originY = this.target!.clientTop || 0;\n    this.prevTargetY = 0;\n    this.targetY = 0;\n    this.speed = (Math.random() * 3) / 100 + 0.005;\n    // this.speed = 0.05;\n  }\n\n  loop() {\n    this.originY += (this.targetY - this.originY) * this.speed;\n    this.target!.style.transform = `translateY(${this.originY / 2}px)`;\n  }\n\n  scrollWindow(scrollY : number) {\n    if (this.prevTargetY != scrollY) {\n      this.targetY = scrollY;\n      this.prevTargetY = scrollY;\n    }\n  }\n}"],"names":["ContinuousPostWrap","target","name","styles","PostContainer","PostColumn","PostItem","PostItemTitle","edges","createItem","itemList","i","columnLength","items","backgroundColors","j","length","fromtmatter","node","frontmatter","backgroundColor","Math","round","random","push","___EmotionJSX","className","style","borderColor","title","useEffect","ScrollList","columns","createColumn","this","document","querySelector","cols","originX","clientLeft","originY","clientTop","targetX","targetY","centerX","window","innerWidth","centerY","innerHeight","timer","addEventListener","moveMouse","bind","scrollWindow","children","col","ScrollColumn","setInterval","_this","loop","call","moveItem","transform","e","clientX","clientY","clearTimeout","setTimeout","_this2","scrollY","item","prevTargetY","speed"],"sourceRoot":""}
{"version":3,"file":"component---src-pages-design-tsx-10de35aa9c391f135459.js","mappings":"6JAOA,IAAMA,GAAgB,g+BAgItB,IAJyD,YAAqB,IAATC,EAAQ,EAARA,KACnE,OAAOC,EAAAA,EAAAA,IAACF,EAAD,CAAkBG,wBAAyB,CAAEC,OAAQH,IAD9D,C,gECrEA,UA1BuD,YAarD,QAZAI,KAYA,IAXEC,KACEC,aAAgBC,EAUpB,EAVoBA,MAAOC,EAU3B,EAV2BA,YAAaC,EAUxC,EAVwCA,QAGpCC,EAOJ,EAREC,kBACED,MAOJ,IALEE,KAEEC,GAGJ,EAJIC,gBAAmBC,gBAIvB,EAHIF,WAIJ,OACEZ,EAAAA,EAAAA,IAACe,EAAAA,EAAD,CAAUT,MAAOA,EAAOC,YAAaA,EAAaS,IAAKR,EAASS,MAAOL,GAEnEM,OAAOC,QAAQV,GAAOW,KAAI,YAAkB,IAAhBC,EAAgB,KAAXC,EAAW,KAAXA,KAC/B,OAAOtB,EAAAA,EAAAA,IAACuB,EAAAA,EAAD,CAAaC,IAAKH,EAAItB,KAAMuB,EAAKvB,MAD1C,IAjBR,C","sources":["webpack://gatsby-starter-default/./src/components/Post/PostContent.tsx","webpack://gatsby-starter-default/./src/pages/design.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\n\ninterface PostContentProps {\n  html: string\n}\n\nconst MarkdownRenderer = styled.div`\n  // Renderer Style\n  display: flex;\n  flex-direction: column;\n  width: 768px;\n  margin: 0 auto;\n  padding: 100px 0;\n  word-break: break-all;\n\n  // Markdown Style\n  line-height: 1.8;\n  font-size: 16px;\n  font-weight: 400;\n\n  // Apply Padding Attribute to All Elements\n  p {\n    padding: 3px 0;\n  }\n\n  // Adjust Heading Element Style\n  h1,\n  h2,\n  h3 {\n    font-weight: 800;\n    margin-bottom: 30px;\n  }\n\n  * + h1,\n  * + h2,\n  * + h3 {\n    margin-top: 80px;\n  }\n\n  hr + h1,\n  hr + h2,\n  hr + h3 {\n    margin-top: 0;\n  }\n\n  h1 {\n    font-size: 30px;\n  }\n\n  h2 {\n    font-size: 25px;\n  }\n\n  h3 {\n    font-size: 20px;\n  }\n\n  // Adjust Quotation Element Style\n  blockquote {\n    margin: 30px 0;\n    padding: 5px 15px;\n    border-left: 2px solid #000000;\n    font-weight: 800;\n  }\n\n  // Adjust List Element Style\n  ol,\n  ul {\n    margin-left: 20px;\n    padding: 30px 0;\n  }\n\n  // Adjust Horizontal Rule style\n  hr {\n    border: 1px solid #000000;\n    margin: 100px 0;\n  }\n\n  // Adjust Link Element Style\n  a {\n    color: #4263eb;\n    text-decoration: underline;\n  }\n\n  // Adjust Code Style\n  pre[class*='language-'] {\n    margin: 30px 0;\n    padding: 15px;\n    font-size: 15px;\n\n    ::-webkit-scrollbar-thumb {\n      background: rgba(255, 255, 255, 0.5);\n      border-radius: 3px;\n    }\n  }\n\n  code[class*='language-'],\n  pre[class*='language-'] {\n    tab-size: 2;\n  }\n\n  // Markdown Responsive Design\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 80px 20px;\n    line-height: 1.6;\n    font-size: 14px;\n\n    h1 {\n      font-size: 23px;\n    }\n\n    h2 {\n      font-size: 20px;\n    }\n\n    h3 {\n      font-size: 17px;\n    }\n\n    img {\n      width: 100%;\n    }\n\n    hr {\n      margin: 50px 0;\n    }\n  }\n`;\n\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html }) {\n  return <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />\n}\n\nexport default PostContent;","import React, { FunctionComponent } from 'react';\nimport { graphql } from 'gatsby';\nimport { PostFrontmatterType } from 'types/PostItem.types';\nimport Template from 'components/Common/Template';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\nimport PostContent from 'components/Post/PostContent';\n\ntype DesignPageProps = {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        siteUrl: string\n      }\n    }\n    allMarkdownRemark: {\n      edges: object\n    }\n    file: {\n      childImageSharp: IGatsbyImageData\n      publicURL: string\n    }\n  }\n}\ntype htmlPostListItemType = {\n  node: {\n    id: string,\n    html: string,\n    fields: {\n      slug: string\n    }\n    frontmatter: PostFrontmatterType[]\n  }\n}\n\nconst DesignPage: FunctionComponent<DesignPageProps> = function({\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl },\n    },\n    allMarkdownRemark: {\n      edges\n    },\n    file: {\n      childImageSharp: { gatsbyImageData },\n      publicURL,\n    }\n  }\n}){\n  return(\n    <Template title={title} description={description} url={siteUrl} image={publicURL}>\n      {\n        Object.entries(edges).map(([id, {node}]) => {\n          return <PostContent key={id} html={node.html}/>\n      })\n      }\n      {/* <PostContent html={html}/> */}\n    </Template>\n  );\n}\n\nexport default DesignPage;\n\n\nexport const getPostList = graphql`\n  query getPostList {\n    site{\n      siteMetadata{\n        title,\n        description,\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n      filter: { frontmatter: { category: { eq: \"design\" }}}\n    ) {\n      edges {\n        node {\n          html\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            category\n            tags\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height:400)\n              }\n            }\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      },\n      publicURL\n    }\n  }\n`"],"names":["MarkdownRenderer","html","___EmotionJSX","dangerouslySetInnerHTML","__html","data","site","siteMetadata","title","description","siteUrl","edges","allMarkdownRemark","file","publicURL","childImageSharp","gatsbyImageData","Template","url","image","Object","entries","map","id","node","PostContent","key"],"sourceRoot":""}